{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./MapContent.css\";\nimport { fetchBoundaryOrganizations } from \"../../services/suggestionService\"; // 백엔드 API 호출\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates\n}) {\n  _s();\n  // 사용자가 선택한 장소의 좌표를 props로 받아옴\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\n\n  useEffect(() => {\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\n\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        // 입력값 없을 경우, 기본 값으로 '동국대 신공학관'  위도 경도에 좌표 표시\n\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates ? coordinates.lat : 37.55805491922956,\n          // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\n          coordinates ? coordinates.lng : 126.99832780535394),\n          level: 4\n        };\n        // ref 객체로 DOM 요소에 접근하여 지도 생성\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\n\n        // // 백엔드로 전송하기 위한 현재 지도 영역 가져옴\n        // const bounds = map.getBounds();\n\n        // // 지도의 남서쪽과 북동쪽 좌표를 객체에서 추출\n        // const swLatLng = bounds.getSouthWest();\n        // const neLatLng = bounds.getNorthEast();\n\n        // // 백엔드 API로 지도 영역 정보(SW, NE) 전송\n        // fetchOrganizations(swLatLng, neLatLng);\n\n        // 지도 이벤트 리스너 : 사용자의 지도 이동이 끝날 때마다 경계 정보를 백엔드에게 전송\n        window.kakao.maps.event.addListener(map, \"bounds_chaned\", () => {\n          const bounds = map.getBounds();\n          const swLatLng = bounds.getSouthWest();\n          const neLatLng = bounds.getNorthEast();\n\n          // 서비스 계층을 통해 백엔드에 경계 정보 전송\n          fetchBoundaryOrganizations(swLatLng, neLatLng);\n        });\n      });\n    };\n  }, [coordinates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_s(MapContent, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","fetchBoundaryOrganizations","jsxDEV","_jsxDEV","MapContent","coordinates","_s","mapContainerRef","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","map","Map","current","event","addListener","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport { fetchBoundaryOrganizations } from \"../../services/suggestionService\"; // 백엔드 API 호출\r\n\r\nfunction MapContent({ coordinates }) {\r\n  // 사용자가 선택한 장소의 좌표를 props로 받아옴\r\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\r\n\r\n  useEffect(() => {\r\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(() => {\r\n        // 입력값 없을 경우, 기본 값으로 '동국대 신공학관'  위도 경도에 좌표 표시\r\n\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates ? coordinates.lat : 37.55805491922956, // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\r\n            coordinates ? coordinates.lng : 126.99832780535394\r\n          ),\r\n          level: 4,\r\n        };\r\n        // ref 객체로 DOM 요소에 접근하여 지도 생성\r\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\r\n\r\n        // // 백엔드로 전송하기 위한 현재 지도 영역 가져옴\r\n        // const bounds = map.getBounds();\r\n\r\n        // // 지도의 남서쪽과 북동쪽 좌표를 객체에서 추출\r\n        // const swLatLng = bounds.getSouthWest();\r\n        // const neLatLng = bounds.getNorthEast();\r\n\r\n        // // 백엔드 API로 지도 영역 정보(SW, NE) 전송\r\n        // fetchOrganizations(swLatLng, neLatLng);\r\n\r\n        // 지도 이벤트 리스너 : 사용자의 지도 이동이 끝날 때마다 경계 정보를 백엔드에게 전송\r\n        window.kakao.maps.event.addListener(map, \"bounds_chaned\", () => {\r\n          const bounds = map.getBounds();\r\n          const swLatLng = bounds.getSouthWest();\r\n          const neLatLng = bounds.getNorthEast();\r\n\r\n          // 서비스 계층을 통해 백엔드에 경계 정보 전송\r\n          fetchBoundaryOrganizations(swLatLng, neLatLng);\r\n        });\r\n      });\r\n    };\r\n  }, [coordinates]);\r\n\r\n  return <div ref={mapContainerRef} className=\"map-container\"></div>;\r\n}\r\nexport default MapContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,kBAAkB;AACzB,SAASC,0BAA0B,QAAQ,kCAAkC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/E,SAASC,UAAUA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACnC;EACA,MAAMC,eAAe,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAI,0CAAyCC,OAAO,CAACC,GAAG,CAACC,2BAA4B,iBAAgB;IAC/GL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC,CAAC,CAAC;;IAEnCA,MAAM,CAACS,MAAM,GAAG,MAAM;MACpBC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC,MAAM;QAC3B;;QAEA,MAAMC,OAAO,GAAG;UACdC,MAAM,EAAE,IAAIL,MAAM,CAACC,KAAK,CAACC,IAAI,CAACI,MAAM,CAClCnB,WAAW,GAAGA,WAAW,CAACoB,GAAG,GAAG,iBAAiB;UAAE;UACnDpB,WAAW,GAAGA,WAAW,CAACqB,GAAG,GAAG,kBAClC,CAAC;UACDC,KAAK,EAAE;QACT,CAAC;QACD;QACA,MAAMC,GAAG,GAAG,IAAIV,MAAM,CAACC,KAAK,CAACC,IAAI,CAACS,GAAG,CAACtB,eAAe,CAACuB,OAAO,EAAER,OAAO,CAAC;;QAEvE;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACAJ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACW,KAAK,CAACC,WAAW,CAACJ,GAAG,EAAE,eAAe,EAAE,MAAM;UAC9D,MAAMK,MAAM,GAAGL,GAAG,CAACM,SAAS,CAAC,CAAC;UAC9B,MAAMC,QAAQ,GAAGF,MAAM,CAACG,YAAY,CAAC,CAAC;UACtC,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,YAAY,CAAC,CAAC;;UAEtC;UACArC,0BAA0B,CAACkC,QAAQ,EAAEE,QAAQ,CAAC;QAChD,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAAChC,WAAW,CAAC,CAAC;EAEjB,oBAAOF,OAAA;IAAKoC,GAAG,EAAEhC,eAAgB;IAACiC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpE;AAACtC,EAAA,CAhDQF,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAiDnB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}