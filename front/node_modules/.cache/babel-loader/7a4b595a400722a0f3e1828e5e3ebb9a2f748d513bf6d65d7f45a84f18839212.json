{"ast":null,"code":"import React,{useState}from\"react\";import searchbarImageFilterOverlap from\"../../assets/images/searchbar-image-filter-overlap.png\";import searchIcon from\"../../assets/images/search-icon-overlap.png\";import{useNavigate}from\"react-router-dom\";import{fetchSuggestions,fetchCoordinates}from\"../../services/suggestionService\";import\"./Searchbar.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Searchbar(){// 단어 자동 완성 기능\nconst[inputValue,setInputValue]=useState(\"\");const[suggestions,setSuggestions]=useState([]);const navigate=useNavigate();// 좌표를 MapPage로 전달함수 구현 후 사용 안함\n// function navigateToMapPage() {\n//   navigate(\"/map\");\n// }\n// 검색어 입력 후 엔터 키 쳤을 때 MapPage 이동 - 일단 사용 x\n// function handleKeyDown(event) {\n//   if (event.key == \"Enter\") {\n//     navigateToMapPage();\n//   }\n// }\n// 단어 자동 완성 기능 - 카카오 맵 api 이용\nconst handleInputChange=async event=>{const value=event.target.value;setInputValue(value);if(value.length>1){// 백엔드 API 미구현 상태 - 사용자 입력 단어 혹은 문구와 연관된 회사명, 주소 등을 백엔드 DB로 부터 가져와 검색어 목록 자동 완성 제안\n// 카카오 맵 API 이용\nconst suggestionData=await fetchSuggestions(value);setSuggestions(suggestionData||[]);}else{setSuggestions([]);}};// 검색 제안 목록 렌더링\nconst renderSuggestions=()=>{return suggestions.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions-list\",children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleSuggestionClick(suggestion),children:[/*#__PURE__*/_jsx(\"span\",{className:\"suggestion-text\",children:suggestion.place_name}),/*#__PURE__*/_jsx(\"span\",{className:\"suggestion-address\",children:suggestion.address_name})]},index))});};// 검색어 제안 클릭 핸들러\nconst handleSuggestionClick=async suggestion=>{// 비동기 처리 이유 : 좌표를 api로부터 가져오기 위함\nconst coordinates=await fetchCoordinates(suggestion.place_name);// 사용자가 클릭한 장소의 좌표 가져오기\nif(coordinates){navigate(\"/map\",{state:{coordinates,address:suggestion.address_name}});// 좌표를 MapPage로 전달\n}else{console.error(\"Failed to fetch coordinates\");}//navigate(\"/map\", { state: { coordinates } });  // 수정 후\n// setInputValue(placeName); // 입력창에 검색어 설정 (수정 전)\nsetInputValue(suggestion.place_name);setSuggestions([]);// 검색어 제안 목록 숨김 (공통)\n//navigateToMapPage(); // 검색어 실행 (수정 전)\n};// 토클 버튼 - 사용자의 선택 저장\nconst[searchOption,setSearchOption]=useState(\"address-building-name\");// 디폴트 : '도로명 주소, 건물이름을 알아요'\nconst toggleSearchOption=()=>{setSearchOption(prevOption=>prevOption===\"address-building-name\"?\"company\":\"address-building-name\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"searchbar-container\",style:{backgroundImage:\"url(\".concat(searchbarImageFilterOverlap,\")\")},children:[/*#__PURE__*/_jsx(\"p\",{className:\"searchbar-title\",children:\"\\uC138\\uAE08\\uC774 \\uC5B4\\uB514\\uC5D0 \\uC0AC\\uC6A9\\uB418\\uC5C8\\uC744\\uAE4C\\uC694? \\uCC3E\\uC544\\uBCF4\\uC138\\uC694!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"searchbar-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uACF5\\uACF5\\uB370\\uC774\\uD130 \\uC138\\uAE08 \\uC0AC\\uC6A9 \\uC9C0\\uC5ED \\uBC0F \\uD61C\\uD0DD\\uC815\\uBCF4\\uB97C \\uD55C\\uB208\\uC5D0 \\uD655\\uC778\\uD574 \\uBCF4\\uC138\\uC694\"/*onKeyDown={handleKeyDown} */ // 버튼 클릭 없이 엔터 키만으로 지도 페이지로 이동\n,onChange:handleInputChange// 사용자 입력이 발생하면 감지 후 검색어 제안\n}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"search-button\"/* onClick={navigateToMapPage}*/,children:/*#__PURE__*/_jsx(\"img\",{src:searchIcon,alt:\"\\uAC80\\uC0C9\",className:\"search-button-image\"})})]}),renderSuggestions(),/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-buttons-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"toggle-button  \".concat(searchOption===\"address-building-name\"?\"active\":\"\"),onClick:()=>setSearchOption(\"address-building-name\"),children:\"\\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C, \\uAC74\\uBB3C \\uC774\\uB984\\uC744 \\uC54C\\uC544\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-button \".concat(searchOption===\"company\"?\"active\":\"\"),onClick:()=>setSearchOption(\"company\"),children:\"\\uD68C\\uC0AC\\uBA85\\uC744 \\uC54C\\uC544\\uC694\"})]})]});}export default Searchbar;","map":{"version":3,"names":["React","useState","searchbarImageFilterOverlap","searchIcon","useNavigate","fetchSuggestions","fetchCoordinates","jsx","_jsx","jsxs","_jsxs","Searchbar","inputValue","setInputValue","suggestions","setSuggestions","navigate","handleInputChange","event","value","target","length","suggestionData","renderSuggestions","className","children","map","suggestion","index","onClick","handleSuggestionClick","place_name","address_name","coordinates","state","address","console","error","searchOption","setSearchOption","toggleSearchOption","prevOption","style","backgroundImage","concat","type","placeholder","onChange","src","alt"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/Searchbar/Searchbar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport searchbarImageFilterOverlap from \"../../assets/images/searchbar-image-filter-overlap.png\";\r\nimport searchIcon from \"../../assets/images/search-icon-overlap.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  fetchSuggestions,\r\n  fetchCoordinates,\r\n} from \"../../services/suggestionService\";\r\nimport \"./Searchbar.css\";\r\n\r\nfunction Searchbar() {\r\n  // 단어 자동 완성 기능\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // 좌표를 MapPage로 전달함수 구현 후 사용 안함\r\n  // function navigateToMapPage() {\r\n  //   navigate(\"/map\");\r\n  // }\r\n  // 검색어 입력 후 엔터 키 쳤을 때 MapPage 이동 - 일단 사용 x\r\n  // function handleKeyDown(event) {\r\n  //   if (event.key == \"Enter\") {\r\n  //     navigateToMapPage();\r\n  //   }\r\n  // }\r\n\r\n  // 단어 자동 완성 기능 - 카카오 맵 api 이용\r\n  const handleInputChange = async (event) => {\r\n    const value = event.target.value;\r\n    setInputValue(value);\r\n\r\n    if (value.length > 1) {\r\n      // 백엔드 API 미구현 상태 - 사용자 입력 단어 혹은 문구와 연관된 회사명, 주소 등을 백엔드 DB로 부터 가져와 검색어 목록 자동 완성 제안\r\n      // 카카오 맵 API 이용\r\n      const suggestionData = await fetchSuggestions(value);\r\n      setSuggestions(suggestionData || []);\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  // 검색 제안 목록 렌더링\r\n  const renderSuggestions = () => {\r\n    return (\r\n      suggestions.length > 0 && (\r\n        <ul className=\"suggestions-list\">\r\n          {suggestions.map((suggestion, index) => (\r\n            <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\r\n              {/* 아이콘 */}\r\n              {/* <img src=\"path_to_icon\" alt=\"\" className=\"suggestions-icon\" /> */}\r\n              <span className=\"suggestion-text\">{suggestion.place_name}</span>\r\n              <span className=\"suggestion-address\">\r\n                {suggestion.address_name}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )\r\n    );\r\n  };\r\n  // 검색어 제안 클릭 핸들러\r\n  const handleSuggestionClick = async (suggestion) => {\r\n    // 비동기 처리 이유 : 좌표를 api로부터 가져오기 위함\r\n    const coordinates = await fetchCoordinates(suggestion.place_name); // 사용자가 클릭한 장소의 좌표 가져오기\r\n    if (coordinates) {\r\n      navigate(\"/map\", {\r\n        state: { coordinates, address: suggestion.address_name },\r\n      }); // 좌표를 MapPage로 전달\r\n    } else {\r\n      console.error(\"Failed to fetch coordinates\");\r\n    }\r\n    //navigate(\"/map\", { state: { coordinates } });  // 수정 후\r\n    // setInputValue(placeName); // 입력창에 검색어 설정 (수정 전)\r\n    setInputValue(suggestion.place_name);\r\n    setSuggestions([]); // 검색어 제안 목록 숨김 (공통)\r\n    //navigateToMapPage(); // 검색어 실행 (수정 전)\r\n  };\r\n\r\n  // 토클 버튼 - 사용자의 선택 저장\r\n  const [searchOption, setSearchOption] = useState(\"address-building-name\"); // 디폴트 : '도로명 주소, 건물이름을 알아요'\r\n\r\n  const toggleSearchOption = () => {\r\n    setSearchOption((prevOption) =>\r\n      prevOption === \"address-building-name\"\r\n        ? \"company\"\r\n        : \"address-building-name\"\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className=\"searchbar-container\"\r\n      style={{ backgroundImage: `url(${searchbarImageFilterOverlap})` }}\r\n    >\r\n      <p className=\"searchbar-title\">\r\n        세금이 어디에 사용되었을까요? 찾아보세요!\r\n      </p>\r\n      <div className=\"searchbar-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"공공데이터 세금 사용 지역 및 혜택정보를 한눈에 확인해 보세요\"\r\n          /*onKeyDown={handleKeyDown} */ // 버튼 클릭 없이 엔터 키만으로 지도 페이지로 이동\r\n          onChange={handleInputChange} // 사용자 입력이 발생하면 감지 후 검색어 제안\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"search-button\"\r\n          /* onClick={navigateToMapPage}*/\r\n        >\r\n          <img src={searchIcon} alt=\"검색\" className=\"search-button-image\" />\r\n        </button>\r\n      </div>\r\n      {/* 검색 제안 목록 -- css 미적용*/}\r\n      {renderSuggestions()}\r\n      <div className=\"toggle-buttons-container\">\r\n        <button\r\n          className={`toggle-button  ${\r\n            searchOption === \"address-building-name\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setSearchOption(\"address-building-name\")}\r\n        >\r\n          도로명 주소, 건물 이름을 알아요\r\n        </button>\r\n        <button\r\n          className={`toggle-button ${\r\n            searchOption === \"company\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setSearchOption(\"company\")}\r\n        >\r\n          회사명을 알아요\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}