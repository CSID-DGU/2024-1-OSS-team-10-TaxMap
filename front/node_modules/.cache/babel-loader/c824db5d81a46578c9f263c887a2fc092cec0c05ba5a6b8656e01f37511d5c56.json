{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\pages\\\\MapPage\\\\MapPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Nav from \"../../components/Nav/Nav\";\nimport Footer from \"../../components/Footer/Footer\";\nimport MapContent from \"../../components/MapContent/MapContent\";\nimport { useLocation, useParams } from \"react-router-dom\"; // 리액트 쿼리 스트링 읽어오기\n\n// MapPage.jsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapPage() {\n  _s();\n  var _location$state;\n  // 쿼리 스트링 읽어오기\n\n  const {\n    mode\n  } = useParams(); // service 또는 department 읽어옴\n\n  // 사용자가 선택한 장소의 좌표를 중심좌표로 하여 지도 보여줌\n  const location = useLocation(); // 위치 정보 가져오기\n  // url state에서 좌표 정보 추출\n  const coordinates = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.coordinates;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mode === \"service\" ? `서비스` : `부처별`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContent, {\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(MapPage, \"eRNf9XPqBEGhZ/8WQfMlPQhOLgg=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","Nav","Footer","MapContent","useLocation","useParams","jsxDEV","_jsxDEV","MapPage","_s","_location$state","mode","location","coordinates","state","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/pages/MapPage/MapPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Nav from \"../../components/Nav/Nav\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport MapContent from \"../../components/MapContent/MapContent\";\r\nimport { useLocation, useParams } from \"react-router-dom\"; // 리액트 쿼리 스트링 읽어오기\r\n\r\n// MapPage.jsx\r\nfunction MapPage() {\r\n  // 쿼리 스트링 읽어오기\r\n\r\n  const { mode } = useParams(); // service 또는 department 읽어옴\r\n\r\n  // 사용자가 선택한 장소의 좌표를 중심좌표로 하여 지도 보여줌\r\n  const location = useLocation(); // 위치 정보 가져오기\r\n  // url state에서 좌표 정보 추출\r\n  const coordinates = location.state?.coordinates;\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      {/*!-- 서비스 모드, 부처별 모드로 쿼리 스트링 전달하여 MapPage로 라우터 연결까지만 완료 --*/}\r\n      <div>{mode === \"service\" ? `서비스` : `부처별`}</div>\r\n\r\n      <MapContent coordinates={coordinates} />\r\n    </div>\r\n  );\r\n}\r\nexport default MapPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACjB;;EAEA,MAAM;IAAEC;EAAK,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE9B;EACA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC;EACA,MAAMS,WAAW,IAAAH,eAAA,GAAGE,QAAQ,CAACE,KAAK,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBG,WAAW;EAC/C,oBACEN,OAAA;IAAAQ,QAAA,gBACER,OAAA,CAACN,GAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEPZ,OAAA;MAAAQ,QAAA,EAAMJ,IAAI,KAAK,SAAS,GAAI,KAAI,GAAI;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE/CZ,OAAA,CAACJ,UAAU;MAACU,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACV,EAAA,CAlBQD,OAAO;EAAA,QAGGH,SAAS,EAGTD,WAAW;AAAA;AAAAgB,EAAA,GANrBZ,OAAO;AAmBhB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}