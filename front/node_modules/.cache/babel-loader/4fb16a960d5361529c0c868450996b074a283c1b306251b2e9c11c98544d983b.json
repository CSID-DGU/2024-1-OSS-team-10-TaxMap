{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./MapContent.css\";\nimport { fetchBoundaryOrganizations } from \"../../services/suggestionService\"; // 백엔드 API 호출\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates,\n  selectedDepartment\n}) {\n  _s();\n  // '부처별 모드'에서 선택한 부처\n  // 사용자가 선택한 장소의 좌표를 props로 받아옴\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\n\n  // 마커 데이터 저장 (데모)\n  const [markers, setMarkers] = useState([]);\n\n  // 선택된 마커의 정보를 사이드바에 출력 목적\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  // 사이드 바 닫기\n  const closeSidebar = () => {\n    setSelectedMarker(null);\n  };\n  useEffect(() => {\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\n\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        // 입력값 없을 경우, 기본 값으로 '동국대 신공학관'  위도 경도에 좌표 표시\n\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates ? coordinates.lat : 37.55805491922956,\n          // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\n          coordinates ? coordinates.lng : 126.99832780535394),\n          level: 4\n        };\n        // ref 객체로 DOM 요소에 접근하여 지도 생성\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\n\n        // 지도 이벤트 리스너 : 사용자의 지도 이동이 끝날 때마다 경계 정보를 백엔드에게 전송\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", async () => {\n          const bounds = map.getBounds();\n          const swLatLng = bounds.getSouthWest();\n          const neLatLng = bounds.getNorthEast();\n\n          // URL 쿼리 문자열을 사용하여 경계 정보 전송 - POST\n\n          try {\n            const requestBody = {\n              minLat: swLatLng.getLat(),\n              maxLat: neLatLng.getLat(),\n              minLng: swLatLng.getLng(),\n              maxLng: neLatLng.getLng()\n            };\n\n            // 부처별 모드에서 '부처' 선택 시\n            if (selectedDepartment) {\n              requestBody.govOfficerFilter = selectedDepartment;\n            }\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/map/view`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(requestBody)\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setMarkers(data); // 마커 데이터 저장\n              // 이전 마커 삭제 로직 추가 필요\n              // 지도에 마커 추가\n              data.forEach(markerData => {\n                const marker = new window.kakao.maps.Marker({\n                  map: map,\n                  position: new window.kakao.maps.LatLng(markerData.latitude, markerData.longitude),\n                  title: markerData.address // 추가정보 표시 :주소\n                });\n\n                // 마커 클릭 이벤트 핸들러\n                window.kakao.maps.event.addListener(marker, \"click\", () => {\n                  (async () => {\n                    try {\n                      const subsidyResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/subsidy/${markerData.id}`);\n                      if (subsidyResponse.ok) {\n                        const subsidyData = await subsidyResponse.json();\n                        console.log(\"Subsidy Data:\", subsidyData);\n                        setSelectedMarker(subsidyData);\n                      } else {\n                        throw new Error(\"Failed to fetch subsidy details\");\n                      }\n                    } catch (error) {\n                      console.error(\"Error fetching subsidy details:\", error);\n                    }\n                  })();\n                });\n              });\n            } else {\n              throw new Error(\"Failed to fetch markers\");\n            }\n          } catch (error) {\n            console.error(\"Error fetching organizations within bounds:\", error);\n          }\n        });\n      });\n    };\n  }, [coordinates, selectedDepartment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), selectedMarker && /*#__PURE__*/_jsxDEV(Sidebar, {\n      marker: selectedMarker,\n      onClose: closeSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContent, \"Apc7Q8yJbBmUkO4TBLli2LFPIeg=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","fetchBoundaryOrganizations","Sidebar","jsxDEV","_jsxDEV","MapContent","coordinates","selectedDepartment","_s","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","closeSidebar","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","map","Map","current","event","addListener","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","requestBody","minLat","getLat","maxLat","minLng","getLng","maxLng","govOfficerFilter","response","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","data","json","forEach","markerData","marker","Marker","position","latitude","longitude","title","address","subsidyResponse","id","subsidyData","console","log","Error","error","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport { fetchBoundaryOrganizations } from \"../../services/suggestionService\"; // 백엔드 API 호출\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nfunction MapContent({ coordinates, selectedDepartment }) {\r\n  // '부처별 모드'에서 선택한 부처\r\n  // 사용자가 선택한 장소의 좌표를 props로 받아옴\r\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\r\n\r\n  // 마커 데이터 저장 (데모)\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  // 선택된 마커의 정보를 사이드바에 출력 목적\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n\r\n  // 사이드 바 닫기\r\n  const closeSidebar = () => {\r\n    setSelectedMarker(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(() => {\r\n        // 입력값 없을 경우, 기본 값으로 '동국대 신공학관'  위도 경도에 좌표 표시\r\n\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates ? coordinates.lat : 37.55805491922956, // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\r\n            coordinates ? coordinates.lng : 126.99832780535394\r\n          ),\r\n          level: 4,\r\n        };\r\n        // ref 객체로 DOM 요소에 접근하여 지도 생성\r\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\r\n\r\n        // 지도 이벤트 리스너 : 사용자의 지도 이동이 끝날 때마다 경계 정보를 백엔드에게 전송\r\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", async () => {\r\n          const bounds = map.getBounds();\r\n          const swLatLng = bounds.getSouthWest();\r\n          const neLatLng = bounds.getNorthEast();\r\n\r\n          // URL 쿼리 문자열을 사용하여 경계 정보 전송 - POST\r\n\r\n          try {\r\n            const requestBody = {\r\n              minLat: swLatLng.getLat(),\r\n              maxLat: neLatLng.getLat(),\r\n              minLng: swLatLng.getLng(),\r\n              maxLng: neLatLng.getLng(),\r\n            };\r\n\r\n            // 부처별 모드에서 '부처' 선택 시\r\n            if (selectedDepartment) {\r\n              requestBody.govOfficerFilter = selectedDepartment;\r\n            }\r\n\r\n            const response = await fetch(\r\n              `${process.env.REACT_APP_API_URL}/api/map/view`,\r\n              {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n              }\r\n            );\r\n\r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              setMarkers(data); // 마커 데이터 저장\r\n              // 이전 마커 삭제 로직 추가 필요\r\n              // 지도에 마커 추가\r\n              data.forEach((markerData) => {\r\n                const marker = new window.kakao.maps.Marker({\r\n                  map: map,\r\n                  position: new window.kakao.maps.LatLng(\r\n                    markerData.latitude,\r\n                    markerData.longitude\r\n                  ),\r\n                  title: markerData.address, // 추가정보 표시 :주소\r\n                });\r\n\r\n                // 마커 클릭 이벤트 핸들러\r\n                window.kakao.maps.event.addListener(marker, \"click\", () => {\r\n                  (async () => {\r\n                    try {\r\n                      const subsidyResponse = await fetch(\r\n                        `${process.env.REACT_APP_API_URL}/api/subsidy/${markerData.id}`\r\n                      );\r\n                      if (subsidyResponse.ok) {\r\n                        const subsidyData = await subsidyResponse.json();\r\n                        console.log(\"Subsidy Data:\", subsidyData);\r\n                        setSelectedMarker(subsidyData);\r\n                      } else {\r\n                        throw new Error(\"Failed to fetch subsidy details\");\r\n                      }\r\n                    } catch (error) {\r\n                      console.error(\"Error fetching subsidy details:\", error);\r\n                    }\r\n                  })();\r\n                });\r\n              });\r\n            } else {\r\n              throw new Error(\"Failed to fetch markers\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error fetching organizations within bounds:\", error);\r\n          }\r\n        });\r\n      });\r\n    };\r\n  }, [coordinates, selectedDepartment]);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      {selectedMarker && (\r\n        <Sidebar marker={selectedMarker} onClose={closeSidebar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default MapContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}