{"ast":null,"code":"// 입력 검색어 제안 기능 - API 호출 관련 함수\n// suggestionService.js\n\nexport const fetchSuggestions = async keyword => {\n  try {\n    const response = await fetch(`https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(keyword)}`, {\n      headers: {\n        Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_MAP_REST_API_KEY}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.documents; // 카카오 API의 응답에서 실제 제안 목록을 반환\n  } catch (error) {\n    console.error(\"Error fetching suggestions:\", error);\n    return []; // 에러 발생 시 빈 배열 반환\n  }\n};\n\n// 사용자가 검색 제안 목록에서 한 개 선택시 해당 좌표를 가져옴\nexport const fetchCoordinates = async placeName => {\n  try {\n    const response = await fetch(`https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(placeName)}`, {\n      headers: {\n        Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_MAP_REST_API_KEY}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.documents[0] ? {\n      lat: data.documents[0].y,\n      lng: data.documents[0].x\n    } : null;\n  } catch (error) {\n    console.log(\"Error fetching coordinates: \", error);\n    return null; // 좌표 가져오기 오류 시 null 반환\n  }\n};","map":{"version":3,"names":["fetchSuggestions","keyword","response","fetch","encodeURIComponent","headers","Authorization","process","env","REACT_APP_KAKAO_MAP_REST_API_KEY","ok","Error","status","data","json","documents","error","console","fetchCoordinates","placeName","lat","y","lng","x","log"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/services/suggestionService.js"],"sourcesContent":["// 입력 검색어 제안 기능 - API 호출 관련 함수\r\n// suggestionService.js\r\n\r\nexport const fetchSuggestions = async (keyword) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(\r\n        keyword\r\n      )}`,\r\n      {\r\n        headers: {\r\n          Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_MAP_REST_API_KEY}`,\r\n        },\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.documents; // 카카오 API의 응답에서 실제 제안 목록을 반환\r\n  } catch (error) {\r\n    console.error(\"Error fetching suggestions:\", error);\r\n    return []; // 에러 발생 시 빈 배열 반환\r\n  }\r\n};\r\n\r\n// 사용자가 검색 제안 목록에서 한 개 선택시 해당 좌표를 가져옴\r\nexport const fetchCoordinates = async (placeName) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(\r\n        placeName\r\n      )}`,\r\n      {\r\n        headers: {\r\n          Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_MAP_REST_API_KEY}`,\r\n        },\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.documents[0]\r\n      ? { lat: data.documents[0].y, lng: data.documents[0].x }\r\n      : null;\r\n  } catch (error) {\r\n    console.log(\"Error fetching coordinates: \", error);\r\n    return null; // 좌표 가져오기 오류 시 null 반환\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,gBAAgB,GAAG,MAAOC,OAAO,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,6DAA4DC,kBAAkB,CAC7EH,OACF,CAAE,EAAC,EACH;MACEI,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,OAAO,CAACC,GAAG,CAACC,gCAAiC;MACzE;IACF,CACF,CAAC;IACD,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,SAAS,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EACnD,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CACzB,6DAA4DC,kBAAkB,CAC7Ee,SACF,CAAE,EAAC,EACH;MACEd,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,OAAO,CAACC,GAAG,CAACC,gCAAiC;MACzE;IACF,CACF,CAAC;IACD,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,GACpB;MAAEK,GAAG,EAAEP,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAACM,CAAC;MAAEC,GAAG,EAAET,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAACQ;IAAE,CAAC,GACtD,IAAI;EACV,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACO,GAAG,CAAC,8BAA8B,EAAER,KAAK,CAAC;IAClD,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}