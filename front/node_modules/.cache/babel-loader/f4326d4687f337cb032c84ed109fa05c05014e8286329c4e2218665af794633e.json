{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Nav from\"../../components/Nav/Nav\";import Footer from\"../../components/Footer/Footer\";import MapContent from\"../../components/MapContent/MapContent\";import{useLocation,useParams}from\"react-router-dom\";// 리액트 쿼리 스트링 읽어오기\n// MapPage.jsx\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MapPage(){var _location$state;// 쿼리 스트링 읽어오기\nconst{mode}=useParams();// service 또는 department 읽어옴\n// 사용자가 선택한 장소의 좌표를 중심좌표로 하여 지도 보여줌\nconst location=useLocation();// 위치 정보 가져오기\n// url state에서 좌표 정보 추출\nconst coordinates=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.coordinates)||{lat:37.55805491922956,lng:126.99832780535394// 동국대 신공학관\n};// 쿼리 스트링에서 부처 카테고리 추출\nconst searchParams=new URLSearchParams(location.search);const initialDepartment=searchParams.get(\"category\");// 부처 선택 상태 관리\nconst[selectedDepartment,setSelectedDepartment]=useState(initialDepartment);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Nav,{onDepartmentSelect:setSelectedDepartment}),/*#__PURE__*/_jsx(MapContent,{coordinates:coordinates,selectedDepartment:selectedDepartment}),/*#__PURE__*/_jsx(Footer,{})]});}export default MapPage;","map":{"version":3,"names":["React","useEffect","useState","Nav","Footer","MapContent","useLocation","useParams","jsx","_jsx","jsxs","_jsxs","MapPage","_location$state","mode","location","coordinates","state","lat","lng","searchParams","URLSearchParams","search","initialDepartment","get","selectedDepartment","setSelectedDepartment","children","onDepartmentSelect"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/pages/MapPage/MapPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../../components/Nav/Nav\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport MapContent from \"../../components/MapContent/MapContent\";\r\nimport { useLocation, useParams } from \"react-router-dom\"; // 리액트 쿼리 스트링 읽어오기\r\n\r\n// MapPage.jsx\r\nfunction MapPage() {\r\n  // 쿼리 스트링 읽어오기\r\n  const { mode } = useParams(); // service 또는 department 읽어옴\r\n\r\n  // 사용자가 선택한 장소의 좌표를 중심좌표로 하여 지도 보여줌\r\n  const location = useLocation(); // 위치 정보 가져오기\r\n\r\n  // url state에서 좌표 정보 추출\r\n  const coordinates = location.state?.coordinates || {\r\n    lat: 37.55805491922956,\r\n    lng: 126.99832780535394, // 동국대 신공학관\r\n  };\r\n\r\n  // 쿼리 스트링에서 부처 카테고리 추출\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const initialDepartment = searchParams.get(\"category\");\r\n\r\n  // 부처 선택 상태 관리\r\n  const [selectedDepartment, setSelectedDepartment] =\r\n    useState(initialDepartment);\r\n\r\n  return (\r\n    <div>\r\n      <Nav onDepartmentSelect={setSelectedDepartment} />\r\n      {/*!-- 서비스 모드, 부처별 모드로 쿼리 스트링 전달하여 MapPage로 라우터 연결까지만 완료 --*/}\r\n\r\n      <MapContent\r\n        coordinates={coordinates}\r\n        selectedDepartment={selectedDepartment}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nexport default MapPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,GAAG,KAAM,0BAA0B,CAC1C,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,UAAU,KAAM,wCAAwC,CAC/D,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CAAE;AAE3D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,OAAOA,CAAA,CAAG,KAAAC,eAAA,CACjB;AACA,KAAM,CAAEC,IAAK,CAAC,CAAGP,SAAS,CAAC,CAAC,CAAE;AAE9B;AACA,KAAM,CAAAQ,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAAE;AAEhC;AACA,KAAM,CAAAU,WAAW,CAAG,EAAAH,eAAA,CAAAE,QAAQ,CAACE,KAAK,UAAAJ,eAAA,iBAAdA,eAAA,CAAgBG,WAAW,GAAI,CACjDE,GAAG,CAAE,iBAAiB,CACtBC,GAAG,CAAE,kBAAoB;AAC3B,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAC,eAAe,CAACN,QAAQ,CAACO,MAAM,CAAC,CACzD,KAAM,CAAAC,iBAAiB,CAAGH,YAAY,CAACI,GAAG,CAAC,UAAU,CAAC,CAEtD;AACA,KAAM,CAACC,kBAAkB,CAAEC,qBAAqB,CAAC,CAC/CxB,QAAQ,CAACqB,iBAAiB,CAAC,CAE7B,mBACEZ,KAAA,QAAAgB,QAAA,eACElB,IAAA,CAACN,GAAG,EAACyB,kBAAkB,CAAEF,qBAAsB,CAAE,CAAC,cAGlDjB,IAAA,CAACJ,UAAU,EACTW,WAAW,CAAEA,WAAY,CACzBS,kBAAkB,CAAEA,kBAAmB,CACxC,CAAC,cACFhB,IAAA,CAACL,MAAM,GAAE,CAAC,EACP,CAAC,CAEV,CACA,cAAe,CAAAQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}