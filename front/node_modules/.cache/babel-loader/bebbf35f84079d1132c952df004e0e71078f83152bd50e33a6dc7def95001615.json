{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./MapContent.css\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates,\n  selectedDepartment\n}) {\n  _s();\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [map, setMap] = useState(null);\n  const closeSidebar = () => {\n    setSelectedMarker(null);\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script);\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates ? coordinates.lat : 37.55805491922956, coordinates ? coordinates.lng : 126.99832780535394),\n          level: 4\n        };\n        const newMap = new window.kakao.maps.Map(mapContainerRef.current, options);\n        setMap(newMap);\n        window.kakao.maps.event.addListener(newMap, \"bounds_changed\", async () => {\n          if (!selectedDepartment) {\n            fetchAndDisplayMarkers(newMap);\n          }\n        });\n        fetchAndDisplayMarkers(newMap);\n      });\n    };\n  }, [coordinates]);\n  useEffect(() => {\n    if (map) {\n      fetchAndDisplayMarkers(map);\n    }\n  }, [selectedDepartment]);\n  const fetchAndDisplayMarkers = async mapInstance => {\n    const bounds = mapInstance.getBounds();\n    const swLatLng = bounds.getSouthWest();\n    const neLatLng = bounds.getNorthEast();\n    const requestBody = {\n      minLat: swLatLng.getLat(),\n      maxLat: neLatLng.getLat(),\n      minLng: swLatLng.getLng(),\n      maxLng: neLatLng.getLng(),\n      govOfficeFilter: selectedDepartment // 부처 필터 추가\n    };\n    console.log(\"Request body:\", requestBody);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/map/view`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch markers\");\n      }\n      const data = await response.json();\n      console.log(\"Fetched markers data:\", data);\n      const filteredMarkers = selectedDepartment ? data.filter(markerData => markerData.organizations.some(org => org.subsidies && org.subsidies.some(subsidy => subsidy.govOffice === selectedDepartment))) : data;\n      console.log(\"Filtered markers data:\", filteredMarkers);\n      setMarkers(filteredMarkers);\n      filteredMarkers.forEach(markerData => {\n        console.log(\"Creating marker for:\", markerData);\n        const marker = new window.kakao.maps.Marker({\n          map: mapInstance,\n          position: new window.kakao.maps.LatLng(markerData.latitude, markerData.longitude),\n          title: markerData.address\n        });\n        console.log(\"Marker created:\", marker);\n        window.kakao.maps.event.addListener(marker, \"click\", async () => {\n          try {\n            const organizationsWithSubsidies = await Promise.all((markerData.organizations || []).map(async org => {\n              const subsidyResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/subsidy/${org.id}`);\n              if (subsidyResponse.ok) {\n                const subsidyData = await subsidyResponse.json();\n                return {\n                  ...org,\n                  subsidies: subsidyData\n                };\n              }\n              return org;\n            }));\n            setSelectedMarker({\n              ...markerData,\n              organizations: organizationsWithSubsidies\n            });\n          } catch (error) {\n            console.error(\"Error fetching subsidy details:\", error);\n          }\n        });\n      });\n    } catch (error) {\n      console.error(\"Error fetching organizations within bounds:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), selectedMarker && /*#__PURE__*/_jsxDEV(Sidebar, {\n      marker: selectedMarker,\n      onClose: closeSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContent, \"Ry8BWdCtqnLUe1D2Tjd9UdC0cXE=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Sidebar","jsxDEV","_jsxDEV","MapContent","coordinates","selectedDepartment","_s","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","map","setMap","closeSidebar","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","newMap","Map","current","event","addListener","fetchAndDisplayMarkers","mapInstance","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","requestBody","minLat","getLat","maxLat","minLng","getLng","maxLng","govOfficeFilter","console","log","response","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","Error","data","json","filteredMarkers","filter","markerData","organizations","some","org","subsidies","subsidy","govOffice","forEach","marker","Marker","position","latitude","longitude","title","address","organizationsWithSubsidies","Promise","all","subsidyResponse","id","subsidyData","error","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nfunction MapContent({ coordinates, selectedDepartment }) {\r\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  const [map, setMap] = useState(null);\r\n\r\n  const closeSidebar = () => {\r\n    setSelectedMarker(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(() => {\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates ? coordinates.lat : 37.55805491922956,\r\n            coordinates ? coordinates.lng : 126.99832780535394\r\n          ),\r\n          level: 4,\r\n        };\r\n\r\n        const newMap = new window.kakao.maps.Map(\r\n          mapContainerRef.current,\r\n          options\r\n        );\r\n        setMap(newMap);\r\n\r\n        window.kakao.maps.event.addListener(\r\n          newMap,\r\n          \"bounds_changed\",\r\n          async () => {\r\n            if (!selectedDepartment) {\r\n              fetchAndDisplayMarkers(newMap);\r\n            }\r\n          }\r\n        );\r\n\r\n        fetchAndDisplayMarkers(newMap);\r\n      });\r\n    };\r\n  }, [coordinates]);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      fetchAndDisplayMarkers(map);\r\n    }\r\n  }, [selectedDepartment]);\r\n\r\n  const fetchAndDisplayMarkers = async (mapInstance) => {\r\n    const bounds = mapInstance.getBounds();\r\n    const swLatLng = bounds.getSouthWest();\r\n    const neLatLng = bounds.getNorthEast();\r\n\r\n    const requestBody = {\r\n      minLat: swLatLng.getLat(),\r\n      maxLat: neLatLng.getLat(),\r\n      minLng: swLatLng.getLng(),\r\n      maxLng: neLatLng.getLng(),\r\n      govOfficeFilter: selectedDepartment, // 부처 필터 추가\r\n    };\r\n\r\n    console.log(\"Request body:\", requestBody);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/map/view`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(requestBody),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch markers\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Fetched markers data:\", data);\r\n\r\n      const filteredMarkers = selectedDepartment\r\n        ? data.filter((markerData) =>\r\n            markerData.organizations.some(\r\n              (org) =>\r\n                org.subsidies &&\r\n                org.subsidies.some(\r\n                  (subsidy) => subsidy.govOffice === selectedDepartment\r\n                )\r\n            )\r\n          )\r\n        : data;\r\n\r\n      console.log(\"Filtered markers data:\", filteredMarkers);\r\n\r\n      setMarkers(filteredMarkers);\r\n\r\n      filteredMarkers.forEach((markerData) => {\r\n        console.log(\"Creating marker for:\", markerData);\r\n\r\n        const marker = new window.kakao.maps.Marker({\r\n          map: mapInstance,\r\n          position: new window.kakao.maps.LatLng(\r\n            markerData.latitude,\r\n            markerData.longitude\r\n          ),\r\n          title: markerData.address,\r\n        });\r\n\r\n        console.log(\"Marker created:\", marker);\r\n\r\n        window.kakao.maps.event.addListener(marker, \"click\", async () => {\r\n          try {\r\n            const organizationsWithSubsidies = await Promise.all(\r\n              (markerData.organizations || []).map(async (org) => {\r\n                const subsidyResponse = await fetch(\r\n                  `${process.env.REACT_APP_API_URL}/api/subsidy/${org.id}`\r\n                );\r\n                if (subsidyResponse.ok) {\r\n                  const subsidyData = await subsidyResponse.json();\r\n                  return { ...org, subsidies: subsidyData };\r\n                }\r\n                return org;\r\n              })\r\n            );\r\n\r\n            setSelectedMarker({\r\n              ...markerData,\r\n              organizations: organizationsWithSubsidies,\r\n            });\r\n          } catch (error) {\r\n            console.error(\"Error fetching subsidy details:\", error);\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching organizations within bounds:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      {selectedMarker && (\r\n        <Sidebar marker={selectedMarker} onClose={closeSidebar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}