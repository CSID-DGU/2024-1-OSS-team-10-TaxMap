{"ast":null,"code":"'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\nimport throttle from './throttle.js';\nimport speedometer from './speedometer.js';\nconst kInternals = Symbol('internals');\nclass AxiosTransformStream extends stream.Transform {\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n    const self = this;\n    const internals = this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n    const _speedometer = speedometer(internals.ticksRate * options.samplesCount, internals.timeWindow);\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n    let bytesNotified = 0;\n    internals.updateProgress = throttle(function throttledHandler() {\n      const totalBytes = internals.length;\n      const bytesTransferred = internals.bytesSeen;\n      const progressBytes = bytesTransferred - bytesNotified;\n      if (!progressBytes || self.destroyed) return;\n      const rate = _speedometer(progressBytes);\n      bytesNotified = bytesTransferred;\n      process.nextTick(() => {\n        self.emit('progress', {\n          loaded: bytesTransferred,\n          total: totalBytes,\n          progress: totalBytes ? bytesTransferred / totalBytes : undefined,\n          bytes: progressBytes,\n          rate: rate ? rate : undefined,\n          estimated: rate && totalBytes && bytesTransferred <= totalBytes ? (totalBytes - bytesTransferred) / rate : undefined,\n          lengthComputable: totalBytes != null\n        });\n      });\n    }, internals.ticksRate);\n    const onFinish = () => {\n      internals.updateProgress.call(true);\n    };\n    this.once('end', onFinish);\n    this.once('error', onFinish);\n  }\n  _read(size) {\n    const internals = this[kInternals];\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n    return super._read(size);\n  }\n  _transform(chunk, encoding, callback) {\n    const self = this;\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n    const readableHighWaterMark = this.readableHighWaterMark;\n    const timeWindow = internals.timeWindow;\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = maxRate / divider;\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n    function pushChunk(_chunk, _callback) {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n      if (internals.isCaptured) {\n        internals.updateProgress();\n      }\n      if (self.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n      if (maxRate) {\n        const now = Date.now();\n        if (!internals.ts || (passed = now - internals.ts) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n      if (maxChunkSize && chunkSize > maxChunkSize && chunkSize - maxChunkSize > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n  setLength(length) {\n    this[kInternals].length = +length;\n    return this;\n  }\n}\nexport default AxiosTransformStream;","map":{"version":3,"names":["stream","utils","throttle","speedometer","kInternals","Symbol","AxiosTransformStream","Transform","constructor","options","toFlatObject","maxRate","chunkSize","minChunkSize","timeWindow","ticksRate","samplesCount","prop","source","isUndefined","readableHighWaterMark","self","internals","length","bytesSeen","isCaptured","notifiedBytesLoaded","ts","Date","now","bytes","onReadCallback","_speedometer","on","event","bytesNotified","updateProgress","throttledHandler","totalBytes","bytesTransferred","progressBytes","destroyed","rate","process","nextTick","emit","loaded","total","progress","undefined","estimated","lengthComputable","onFinish","call","once","_read","size","_transform","chunk","encoding","callback","divider","bytesThreshold","Math","max","pushChunk","_chunk","_callback","Buffer","byteLength","push","transformChunk","chunkRemainder","maxChunkSize","bytesLeft","passed","setTimeout","subarray","transformNextChunk","err","setLength"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/node_modules/axios/lib/helpers/AxiosTransformStream.js"],"sourcesContent":["'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\nimport throttle from './throttle.js';\nimport speedometer from './speedometer.js';\n\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform{\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const self = this;\n\n    const internals = this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    const _speedometer = speedometer(internals.ticksRate * options.samplesCount, internals.timeWindow);\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n\n    let bytesNotified = 0;\n\n    internals.updateProgress = throttle(function throttledHandler() {\n      const totalBytes = internals.length;\n      const bytesTransferred = internals.bytesSeen;\n      const progressBytes = bytesTransferred - bytesNotified;\n      if (!progressBytes || self.destroyed) return;\n\n      const rate = _speedometer(progressBytes);\n\n      bytesNotified = bytesTransferred;\n\n      process.nextTick(() => {\n        self.emit('progress', {\n          loaded: bytesTransferred,\n          total: totalBytes,\n          progress: totalBytes ? (bytesTransferred / totalBytes) : undefined,\n          bytes: progressBytes,\n          rate: rate ? rate : undefined,\n          estimated: rate && totalBytes && bytesTransferred <= totalBytes ?\n            (totalBytes - bytesTransferred) / rate : undefined,\n          lengthComputable: totalBytes != null\n        });\n      });\n    }, internals.ticksRate);\n\n    const onFinish = () => {\n      internals.updateProgress.call(true);\n    };\n\n    this.once('end', onFinish);\n    this.once('error', onFinish);\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const self = this;\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    function pushChunk(_chunk, _callback) {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      if (internals.isCaptured) {\n        internals.updateProgress();\n      }\n\n      if (self.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = (now - internals.ts)) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && (chunkSize - maxChunkSize) > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n\n  setLength(length) {\n    this[kInternals].length = +length;\n    return this;\n  }\n}\n\nexport default AxiosTransformStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}