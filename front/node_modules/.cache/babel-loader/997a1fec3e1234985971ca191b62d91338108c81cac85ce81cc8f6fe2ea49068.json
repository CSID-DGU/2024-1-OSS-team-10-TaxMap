{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\pages\\\\MapPage\\\\MapPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"../../components/Nav/Nav\";\nimport Footer from \"../../components/Footer/Footer\";\nimport MapContent from \"../../components/MapContent/MapContent\";\nimport { useLocation, useParams } from \"react-router-dom\"; // 리액트 쿼리 스트링 읽어오기\n\n// MapPage.jsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapPage() {\n  _s();\n  var _location$state;\n  // 쿼리 스트링 읽어오기\n  const {\n    mode\n  } = useParams(); // service 또는 department 읽어옴\n\n  // 사용자가 선택한 장소의 좌표를 중심좌표로 하여 지도 보여줌\n  const location = useLocation(); // 위치 정보 가져오기\n\n  // url state에서 좌표 정보 추출\n  const coordinates = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.coordinates) || {\n    lat: 37.55805491922956,\n    lng: 126.99832780535394 // 동국대 신공학관\n  };\n\n  // 쿼리 스트링에서 부처 카테고리 추출\n  const searchParams = new URLSearchParams(location.search);\n  const initialDepartment = searchParams.get(\"category\");\n\n  // 부처 선택 상태 관리\n  const [selectedDepartment, setSelectedDepartment] = useState(initialDepartment);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onDepartmentSelect: setSelectedDepartment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContent, {\n      coordinates: coordinates,\n      selectedDepartment: selectedDepartment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(MapPage, \"xWaWuiBynDf6p+/lNhcY63g8ZI4=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useState","Nav","Footer","MapContent","useLocation","useParams","jsxDEV","_jsxDEV","MapPage","_s","_location$state","mode","location","coordinates","state","lat","lng","searchParams","URLSearchParams","search","initialDepartment","get","selectedDepartment","setSelectedDepartment","children","onDepartmentSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/pages/MapPage/MapPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../../components/Nav/Nav\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport MapContent from \"../../components/MapContent/MapContent\";\r\nimport { useLocation, useParams } from \"react-router-dom\"; // 리액트 쿼리 스트링 읽어오기\r\n\r\n// MapPage.jsx\r\nfunction MapPage() {\r\n  // 쿼리 스트링 읽어오기\r\n  const { mode } = useParams(); // service 또는 department 읽어옴\r\n\r\n  // 사용자가 선택한 장소의 좌표를 중심좌표로 하여 지도 보여줌\r\n  const location = useLocation(); // 위치 정보 가져오기\r\n\r\n  // url state에서 좌표 정보 추출\r\n  const coordinates = location.state?.coordinates || {\r\n    lat: 37.55805491922956,\r\n    lng: 126.99832780535394, // 동국대 신공학관\r\n  };\r\n\r\n  // 쿼리 스트링에서 부처 카테고리 추출\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const initialDepartment = searchParams.get(\"category\");\r\n\r\n  // 부처 선택 상태 관리\r\n  const [selectedDepartment, setSelectedDepartment] =\r\n    useState(initialDepartment);\r\n\r\n  return (\r\n    <div>\r\n      <Nav onDepartmentSelect={setSelectedDepartment} />\r\n      {/*!-- 서비스 모드, 부처별 모드로 쿼리 스트링 전달하여 MapPage로 라우터 연결까지만 완료 --*/}\r\n\r\n      <MapContent\r\n        coordinates={coordinates}\r\n        selectedDepartment={selectedDepartment}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nexport default MapPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACjB;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE9B;EACA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMS,WAAW,GAAG,EAAAH,eAAA,GAAAE,QAAQ,CAACE,KAAK,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBG,WAAW,KAAI;IACjDE,GAAG,EAAE,iBAAiB;IACtBC,GAAG,EAAE,kBAAkB,CAAE;EAC3B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACN,QAAQ,CAACO,MAAM,CAAC;EACzD,MAAMC,iBAAiB,GAAGH,YAAY,CAACI,GAAG,CAAC,UAAU,CAAC;;EAEtD;EACA,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAC/CvB,QAAQ,CAACoB,iBAAiB,CAAC;EAE7B,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACN,GAAG;MAACwB,kBAAkB,EAAEF;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlDtB,OAAA,CAACJ,UAAU;MACTU,WAAW,EAAEA,WAAY;MACzBS,kBAAkB,EAAEA;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFtB,OAAA,CAACL,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACpB,EAAA,CAjCQD,OAAO;EAAA,QAEGH,SAAS,EAGTD,WAAW;AAAA;AAAA0B,EAAA,GALrBtB,OAAO;AAkChB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}