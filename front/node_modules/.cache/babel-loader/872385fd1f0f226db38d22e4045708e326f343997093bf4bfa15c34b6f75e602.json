{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./MapContent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction MapContent() {\n  _s();\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\n\n  useEffect(() => {\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드\n    const script = document.createElement(\"script\");\n    script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey={process.env.REACT_APP_KAKAO_MAP_API_KEY}\";\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\n  });\n\n  // 스크립트 로드 완료되면 지도를 초기화\n  script.onload = () => {\n    kakao.maps.load(() => {\n      const container = document.getElementById(\"map-container\");\n      const options = {\n        center: new kakao.maps.LatLng(37.55805491922956, 126.99832780535394),\n        // 입력값 없을 경우, '동국대 신공학관'  위도 경도에 좌표 표시\n        level: 4\n      };\n\n      // 지도 생성\n      const map = new kakao.maps.Map(container, options);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(MapContent, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","kakao","window","MapContent","_s","mapContainerRef","script","document","createElement","src","head","appendChild","onload","maps","load","container","getElementById","options","center","LatLng","level","map","Map","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./MapContent.css\";\r\n\r\nconst { kakao } = window;\r\nfunction MapContent() {\r\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\r\n\r\n  useEffect(() => {\r\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"//dapi.kakao.com/v2/maps/sdk.js?appkey={process.env.REACT_APP_KAKAO_MAP_API_KEY}\";\r\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\r\n  });\r\n\r\n  // 스크립트 로드 완료되면 지도를 초기화\r\n  script.onload = () => {\r\n    kakao.maps.load(() => {\r\n      const container = document.getElementById(\"map-container\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(37.55805491922956, 126.99832780535394), // 입력값 없을 경우, '동국대 신공학관'  위도 경도에 좌표 표시\r\n        level: 4,\r\n      };\r\n\r\n      // 지도 생성\r\n      const map = new kakao.maps.Map(container, options);\r\n    });\r\n  };\r\n\r\n  return <div className=\"map-container\"></div>;\r\n}\r\nexport default MapContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AACxB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,eAAe,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GACR,kFAAkF;IACpFF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,MAAM,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC;;EAEF;EACAA,MAAM,CAACM,MAAM,GAAG,MAAM;IACpBX,KAAK,CAACY,IAAI,CAACC,IAAI,CAAC,MAAM;MACpB,MAAMC,SAAS,GAAGR,QAAQ,CAACS,cAAc,CAAC,eAAe,CAAC;MAC1D,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,IAAIjB,KAAK,CAACY,IAAI,CAACM,MAAM,CAAC,iBAAiB,EAAE,kBAAkB,CAAC;QAAE;QACtEC,KAAK,EAAE;MACT,CAAC;;MAED;MACA,MAAMC,GAAG,GAAG,IAAIpB,KAAK,CAACY,IAAI,CAACS,GAAG,CAACP,SAAS,EAAEE,OAAO,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC;EAED,oBAAOjB,OAAA;IAAKuB,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC9C;AAACvB,EAAA,CA1BQD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AA2BnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}