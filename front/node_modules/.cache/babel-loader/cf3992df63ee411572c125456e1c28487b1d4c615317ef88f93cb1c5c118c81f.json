{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./MapContent.css\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport clicked_largest_icon from \"../../assets/images/markers/marker_icon_largest_clicked.png\";\nimport clicked_middle_icon from \"../../assets/images/markers/marker_icon_middle_clicked.png\";\nimport clicked_low_icon from \"../../assets/images/markers/marker_icon_low_clicked.png\";\nimport largest_icon from \"../../assets/images/markers/marker_icon_largest.png\";\nimport middle_icon from \"../../assets/images/markers/marker_icon_middle.png\";\nimport low_icon from \"../../assets/images/markers/marker_icon_low.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates\n}) {\n  _s();\n  const mapContainerRef = useRef(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [clickMarker, setClickMarker] = useState(null); // 클릭된 마커 상태 추가\n\n  const closeSidebar = () => {\n    setSelectedMarker(null);\n    setClickMarker(null); // 사이드바 닫힐 때 클릭된 마커 상태 초기화\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script);\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates ? coordinates.lat : 37.55805491922956, coordinates ? coordinates.lng : 126.99832780535394),\n          level: 4\n        };\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", async () => {\n          const bounds = map.getBounds();\n          const swLatLng = bounds.getSouthWest();\n          const neLatLng = bounds.getNorthEast();\n          try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/map/view`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                minLat: swLatLng.getLat(),\n                maxLat: neLatLng.getLat(),\n                minLng: swLatLng.getLng(),\n                maxLng: neLatLng.getLng()\n              })\n            });\n            if (response.ok) {\n              const data = await response.json();\n\n              // 총 수령한 보조금 합산\n              const expenses = data.map(marker => {\n                const totalExpense = marker.organizations.reduce((acc, org) => {\n                  return acc + org.totalReceivedSubsidy;\n                }, 0);\n                return {\n                  ...marker,\n                  totalExpense\n                };\n              });\n              setMarkers(expenses);\n              expenses.forEach(markerData => {\n                let markerImage;\n                if (markerData.totalExpense >= 100000000) {\n                  // 100,000,000 이상\n                  markerImage = largest_icon;\n                } else if (markerData.totalExpense >= 10000000) {\n                  // 10,000,000 ~ 99,999,999\n                  markerImage = middle_icon;\n                } else {\n                  // 0 ~ 9,999,999\n                  markerImage = low_icon;\n                }\n                const marker = new window.kakao.maps.Marker({\n                  map: map,\n                  position: new window.kakao.maps.LatLng(markerData.latitude, markerData.longitude),\n                  title: markerData.address,\n                  image: new window.kakao.maps.MarkerImage(markerImage, new window.kakao.maps.Size(24, 35))\n                });\n                window.kakao.maps.event.addListener(marker, \"click\", async () => {\n                  if (clickMarker) {\n                    let previousMarkerImage;\n                    if (clickMarker.data.totalExpense >= 100000000) {\n                      previousMarkerImage = largest_icon;\n                    } else if (clickMarker.data.totalExpense >= 10000000) {\n                      previousMarkerImage = middle_icon;\n                    } else {\n                      previousMarkerImage = low_icon;\n                    }\n                    clickMarker.marker.setImage(new window.kakao.maps.MarkerImage(previousMarkerImage, new window.kakao.maps.Size(24, 35)));\n                  }\n                  let clickedMarkerImage;\n                  if (markerData.totalExpense >= 100000000) {\n                    clickedMarkerImage = clicked_largest_icon;\n                  } else if (markerData.totalExpense >= 10000000) {\n                    clickedMarkerImage = clicked_middle_icon;\n                  } else {\n                    clickedMarkerImage = clicked_low_icon;\n                  }\n                  marker.setImage(new window.kakao.maps.MarkerImage(clickedMarkerImage, new window.kakao.maps.Size(24, 35)));\n                  setClickMarker({\n                    marker,\n                    data: markerData\n                  }); // 클릭된 마커 상태 업데이트\n\n                  console.log(\"Marker Data:\", markerData);\n                  try {\n                    const orgSubsidies = await Promise.all(markerData.organizations.map(async org => {\n                      const subsidyPromises = org.subsidies.map(async sub => {\n                        try {\n                          const subsidyResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/subsidy/${sub.id}`);\n                          if (subsidyResponse.ok) {\n                            return await subsidyResponse.json();\n                          } else {\n                            console.error(`Failed to fetch subsidy details for subsidy ID: ${sub.id}`);\n                            return null;\n                          }\n                        } catch (subError) {\n                          console.error(`Error fetching subsidy details for subsidy ID: ${sub.id}`, subError);\n                          return null;\n                        }\n                      });\n                      return {\n                        ...org,\n                        subsidies: await Promise.all(subsidyPromises).then(results => results.filter(res => res !== null))\n                      };\n                    }));\n                    setSelectedMarker({\n                      ...markerData,\n                      organizations: orgSubsidies\n                    });\n                  } catch (orgError) {\n                    console.error(\"Error fetching organizations subsidies details:\", orgError);\n                  }\n                });\n              });\n            } else {\n              throw new Error(\"Failed to fetch markers\");\n            }\n          } catch (error) {\n            console.error(\"Error fetching organizations within bounds:\", error);\n          }\n        });\n      });\n    };\n  }, [coordinates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), selectedMarker && /*#__PURE__*/_jsxDEV(Sidebar, {\n      marker: selectedMarker,\n      onClose: closeSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContent, \"hu8GrCRgliKNxEZmHI0KSSRkLXg=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Sidebar","clicked_largest_icon","clicked_middle_icon","clicked_low_icon","largest_icon","middle_icon","low_icon","jsxDEV","_jsxDEV","MapContent","coordinates","_s","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","clickMarker","setClickMarker","closeSidebar","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","map","Map","current","event","addListener","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","response","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","minLat","getLat","maxLat","minLng","getLng","maxLng","ok","data","json","expenses","marker","totalExpense","organizations","reduce","acc","org","totalReceivedSubsidy","forEach","markerData","markerImage","Marker","position","latitude","longitude","title","address","image","MarkerImage","Size","previousMarkerImage","setImage","clickedMarkerImage","console","log","orgSubsidies","Promise","all","subsidyPromises","subsidies","sub","subsidyResponse","id","error","subError","then","results","filter","res","orgError","Error","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport clicked_largest_icon from \"../../assets/images/markers/marker_icon_largest_clicked.png\";\r\nimport clicked_middle_icon from \"../../assets/images/markers/marker_icon_middle_clicked.png\";\r\nimport clicked_low_icon from \"../../assets/images/markers/marker_icon_low_clicked.png\";\r\nimport largest_icon from \"../../assets/images/markers/marker_icon_largest.png\";\r\nimport middle_icon from \"../../assets/images/markers/marker_icon_middle.png\";\r\nimport low_icon from \"../../assets/images/markers/marker_icon_low.png\";\r\n\r\nfunction MapContent({ coordinates }) {\r\n  const mapContainerRef = useRef(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  const [clickMarker, setClickMarker] = useState(null); // 클릭된 마커 상태 추가\r\n\r\n  const closeSidebar = () => {\r\n    setSelectedMarker(null);\r\n    setClickMarker(null); // 사이드바 닫힐 때 클릭된 마커 상태 초기화\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(() => {\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates ? coordinates.lat : 37.55805491922956,\r\n            coordinates ? coordinates.lng : 126.99832780535394\r\n          ),\r\n          level: 4,\r\n        };\r\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\r\n\r\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", async () => {\r\n          const bounds = map.getBounds();\r\n          const swLatLng = bounds.getSouthWest();\r\n          const neLatLng = bounds.getNorthEast();\r\n\r\n          try {\r\n            const response = await fetch(\r\n              `${process.env.REACT_APP_API_URL}/api/map/view`,\r\n              {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                  minLat: swLatLng.getLat(),\r\n                  maxLat: neLatLng.getLat(),\r\n                  minLng: swLatLng.getLng(),\r\n                  maxLng: neLatLng.getLng(),\r\n                }),\r\n              }\r\n            );\r\n            if (response.ok) {\r\n              const data = await response.json();\r\n\r\n              // 총 수령한 보조금 합산\r\n              const expenses = data.map((marker) => {\r\n                const totalExpense = marker.organizations.reduce((acc, org) => {\r\n                  return acc + org.totalReceivedSubsidy;\r\n                }, 0);\r\n                return { ...marker, totalExpense };\r\n              });\r\n\r\n              setMarkers(expenses);\r\n\r\n              expenses.forEach((markerData) => {\r\n                let markerImage;\r\n                if (markerData.totalExpense >= 100000000) {\r\n                  // 100,000,000 이상\r\n                  markerImage = largest_icon;\r\n                } else if (markerData.totalExpense >= 10000000) {\r\n                  // 10,000,000 ~ 99,999,999\r\n                  markerImage = middle_icon;\r\n                } else {\r\n                  // 0 ~ 9,999,999\r\n                  markerImage = low_icon;\r\n                }\r\n\r\n                const marker = new window.kakao.maps.Marker({\r\n                  map: map,\r\n                  position: new window.kakao.maps.LatLng(\r\n                    markerData.latitude,\r\n                    markerData.longitude\r\n                  ),\r\n                  title: markerData.address,\r\n                  image: new window.kakao.maps.MarkerImage(\r\n                    markerImage,\r\n                    new window.kakao.maps.Size(24, 35)\r\n                  ),\r\n                });\r\n\r\n                window.kakao.maps.event.addListener(\r\n                  marker,\r\n                  \"click\",\r\n                  async () => {\r\n                    if (clickMarker) {\r\n                      let previousMarkerImage;\r\n                      if (clickMarker.data.totalExpense >= 100000000) {\r\n                        previousMarkerImage = largest_icon;\r\n                      } else if (clickMarker.data.totalExpense >= 10000000) {\r\n                        previousMarkerImage = middle_icon;\r\n                      } else {\r\n                        previousMarkerImage = low_icon;\r\n                      }\r\n                      clickMarker.marker.setImage(\r\n                        new window.kakao.maps.MarkerImage(\r\n                          previousMarkerImage,\r\n                          new window.kakao.maps.Size(24, 35)\r\n                        )\r\n                      );\r\n                    }\r\n\r\n                    let clickedMarkerImage;\r\n                    if (markerData.totalExpense >= 100000000) {\r\n                      clickedMarkerImage = clicked_largest_icon;\r\n                    } else if (markerData.totalExpense >= 10000000) {\r\n                      clickedMarkerImage = clicked_middle_icon;\r\n                    } else {\r\n                      clickedMarkerImage = clicked_low_icon;\r\n                    }\r\n\r\n                    marker.setImage(\r\n                      new window.kakao.maps.MarkerImage(\r\n                        clickedMarkerImage,\r\n                        new window.kakao.maps.Size(24, 35)\r\n                      )\r\n                    );\r\n                    setClickMarker({ marker, data: markerData }); // 클릭된 마커 상태 업데이트\r\n\r\n                    console.log(\"Marker Data:\", markerData);\r\n\r\n                    try {\r\n                      const orgSubsidies = await Promise.all(\r\n                        markerData.organizations.map(async (org) => {\r\n                          const subsidyPromises = org.subsidies.map(\r\n                            async (sub) => {\r\n                              try {\r\n                                const subsidyResponse = await fetch(\r\n                                  `${process.env.REACT_APP_API_URL}/api/subsidy/${sub.id}`\r\n                                );\r\n                                if (subsidyResponse.ok) {\r\n                                  return await subsidyResponse.json();\r\n                                } else {\r\n                                  console.error(\r\n                                    `Failed to fetch subsidy details for subsidy ID: ${sub.id}`\r\n                                  );\r\n                                  return null;\r\n                                }\r\n                              } catch (subError) {\r\n                                console.error(\r\n                                  `Error fetching subsidy details for subsidy ID: ${sub.id}`,\r\n                                  subError\r\n                                );\r\n                                return null;\r\n                              }\r\n                            }\r\n                          );\r\n                          return {\r\n                            ...org,\r\n                            subsidies: await Promise.all(subsidyPromises).then(\r\n                              (results) => results.filter((res) => res !== null)\r\n                            ),\r\n                          };\r\n                        })\r\n                      );\r\n\r\n                      setSelectedMarker({\r\n                        ...markerData,\r\n                        organizations: orgSubsidies,\r\n                      });\r\n                    } catch (orgError) {\r\n                      console.error(\r\n                        \"Error fetching organizations subsidies details:\",\r\n                        orgError\r\n                      );\r\n                    }\r\n                  }\r\n                );\r\n              });\r\n            } else {\r\n              throw new Error(\"Failed to fetch markers\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error fetching organizations within bounds:\", error);\r\n          }\r\n        });\r\n      });\r\n    };\r\n  }, [coordinates]);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      {selectedMarker && (\r\n        <Sidebar marker={selectedMarker} onClose={closeSidebar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default MapContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}