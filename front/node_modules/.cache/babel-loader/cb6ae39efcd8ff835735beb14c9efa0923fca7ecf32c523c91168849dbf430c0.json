{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./MapContent.css\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates,\n  selectedDepartment\n}) {\n  _s();\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\n\n  // 마커 데이터 저장\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [map, setMap] = useState(null);\n\n  // 사이드 바 닫기\n  const closeSidebar = () => {\n    setSelectedMarker(null);\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script);\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates ? coordinates.lat : 37.55805491922956, coordinates ? coordinates.lng : 126.99832780535394),\n          level: 4\n        };\n        const newMap = new window.kakao.maps.Map(mapContainerRef.current, options);\n        setMap(newMap);\n        window.kakao.maps.event.addListener(newMap, \"bounds_changed\", () => {\n          fetchAndDisplayMarkers(newMap);\n        });\n        fetchAndDisplayMarkers(newMap);\n      });\n    };\n  }, [coordinates]);\n  useEffect(() => {\n    if (map) {\n      fetchAndDisplayMarkers(map);\n    }\n  }, [selectedDepartment]);\n  const fetchAndDisplayMarkers = async mapInstance => {\n    const bounds = mapInstance.getBounds();\n    const swLatLng = bounds.getSouthWest();\n    const neLatLng = bounds.getNorthEast();\n    const requestBody = {\n      minLat: swLatLng.getLat(),\n      maxLat: neLatLng.getLat(),\n      minLng: swLatLng.getLng(),\n      maxLng: neLatLng.getLng(),\n      govOfficeFilter: selectedDepartment // 부처 필터 추가\n    };\n    console.log(\"Request body:\", requestBody);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/map/view`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch markers\");\n      }\n      const data = await response.json();\n      console.log(\"Fetched markers data:\", data);\n\n      // 기존 마커를 지도에서 제거\n      markers.forEach(marker => marker.setMap(null));\n\n      // 새로운 마커 설정\n      const newMarkers = [];\n      for (const markerData of data) {\n        const organizationsWithSubsidies = await Promise.all((markerData.organizations || []).map(async org => {\n          const subsidyResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/subsidy/${org.id}`);\n          if (subsidyResponse.ok) {\n            const subsidyData = await subsidyResponse.json();\n            return {\n              ...org,\n              subsidies: subsidyData\n            };\n          }\n          return org;\n        }));\n        const hasMatchingSubsidy = organizationsWithSubsidies.some(org => org.subsidies.some(subsidy => subsidy.govOffice === selectedDepartment));\n\n        // 부처가 선택되지 않았거나, 선택된 부처와 일치하는 마커만 추가\n        if (!selectedDepartment || hasMatchingSubsidy) {\n          const marker = new window.kakao.maps.Marker({\n            map: mapInstance,\n            position: new window.kakao.maps.LatLng(markerData.latitude, markerData.longitude),\n            title: markerData.address\n          });\n          window.kakao.maps.event.addListener(marker, \"click\", () => {\n            setSelectedMarker({\n              ...markerData,\n              organizations: organizationsWithSubsidies\n            });\n          });\n          newMarkers.push(marker);\n          console.log(\"Marker created:\", marker);\n        }\n      }\n      setMarkers(newMarkers);\n    } catch (error) {\n      console.error(\"Error fetching organizations within bounds:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), selectedMarker && /*#__PURE__*/_jsxDEV(Sidebar, {\n      marker: selectedMarker,\n      onClose: closeSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContent, \"Ry8BWdCtqnLUe1D2Tjd9UdC0cXE=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Sidebar","jsxDEV","_jsxDEV","MapContent","coordinates","selectedDepartment","_s","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","map","setMap","closeSidebar","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","newMap","Map","current","event","addListener","fetchAndDisplayMarkers","mapInstance","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","requestBody","minLat","getLat","maxLat","minLng","getLng","maxLng","govOfficeFilter","console","log","response","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","Error","data","json","forEach","marker","newMarkers","markerData","organizationsWithSubsidies","Promise","all","organizations","org","subsidyResponse","id","subsidyData","subsidies","hasMatchingSubsidy","some","subsidy","govOffice","Marker","position","latitude","longitude","title","address","push","error","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nfunction MapContent({ coordinates, selectedDepartment }) {\r\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\r\n\r\n  // 마커 데이터 저장\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  const [map, setMap] = useState(null);\r\n\r\n  // 사이드 바 닫기\r\n  const closeSidebar = () => {\r\n    setSelectedMarker(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(() => {\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates ? coordinates.lat : 37.55805491922956,\r\n            coordinates ? coordinates.lng : 126.99832780535394\r\n          ),\r\n          level: 4,\r\n        };\r\n\r\n        const newMap = new window.kakao.maps.Map(\r\n          mapContainerRef.current,\r\n          options\r\n        );\r\n        setMap(newMap);\r\n\r\n        window.kakao.maps.event.addListener(newMap, \"bounds_changed\", () => {\r\n          fetchAndDisplayMarkers(newMap);\r\n        });\r\n\r\n        fetchAndDisplayMarkers(newMap);\r\n      });\r\n    };\r\n  }, [coordinates]);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      fetchAndDisplayMarkers(map);\r\n    }\r\n  }, [selectedDepartment]);\r\n\r\n  const fetchAndDisplayMarkers = async (mapInstance) => {\r\n    const bounds = mapInstance.getBounds();\r\n    const swLatLng = bounds.getSouthWest();\r\n    const neLatLng = bounds.getNorthEast();\r\n\r\n    const requestBody = {\r\n      minLat: swLatLng.getLat(),\r\n      maxLat: neLatLng.getLat(),\r\n      minLng: swLatLng.getLng(),\r\n      maxLng: neLatLng.getLng(),\r\n      govOfficeFilter: selectedDepartment, // 부처 필터 추가\r\n    };\r\n\r\n    console.log(\"Request body:\", requestBody);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/map/view`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(requestBody),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch markers\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Fetched markers data:\", data);\r\n\r\n      // 기존 마커를 지도에서 제거\r\n      markers.forEach((marker) => marker.setMap(null));\r\n\r\n      // 새로운 마커 설정\r\n      const newMarkers = [];\r\n\r\n      for (const markerData of data) {\r\n        const organizationsWithSubsidies = await Promise.all(\r\n          (markerData.organizations || []).map(async (org) => {\r\n            const subsidyResponse = await fetch(\r\n              `${process.env.REACT_APP_API_URL}/api/subsidy/${org.id}`\r\n            );\r\n            if (subsidyResponse.ok) {\r\n              const subsidyData = await subsidyResponse.json();\r\n              return { ...org, subsidies: subsidyData };\r\n            }\r\n            return org;\r\n          })\r\n        );\r\n\r\n        const hasMatchingSubsidy = organizationsWithSubsidies.some((org) =>\r\n          org.subsidies.some(\r\n            (subsidy) => subsidy.govOffice === selectedDepartment\r\n          )\r\n        );\r\n\r\n        // 부처가 선택되지 않았거나, 선택된 부처와 일치하는 마커만 추가\r\n        if (!selectedDepartment || hasMatchingSubsidy) {\r\n          const marker = new window.kakao.maps.Marker({\r\n            map: mapInstance,\r\n            position: new window.kakao.maps.LatLng(\r\n              markerData.latitude,\r\n              markerData.longitude\r\n            ),\r\n            title: markerData.address,\r\n          });\r\n\r\n          window.kakao.maps.event.addListener(marker, \"click\", () => {\r\n            setSelectedMarker({\r\n              ...markerData,\r\n              organizations: organizationsWithSubsidies,\r\n            });\r\n          });\r\n\r\n          newMarkers.push(marker);\r\n          console.log(\"Marker created:\", marker);\r\n        }\r\n      }\r\n\r\n      setMarkers(newMarkers);\r\n    } catch (error) {\r\n      console.error(\"Error fetching organizations within bounds:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      {selectedMarker && (\r\n        <Sidebar marker={selectedMarker} onClose={closeSidebar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,kBAAkB;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,UAAUA,CAAC;EAAEC,WAAW;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAMC,eAAe,GAAGT,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtC;EACA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAEpC;EACA,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzBH,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAI,0CAAyCC,OAAO,CAACC,GAAG,CAACC,2BAA4B,iBAAgB;IAC/GL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;IAEjCA,MAAM,CAACS,MAAM,GAAG,MAAM;MACpBC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC,MAAM;QAC3B,MAAMC,OAAO,GAAG;UACdC,MAAM,EAAE,IAAIL,MAAM,CAACC,KAAK,CAACC,IAAI,CAACI,MAAM,CAClC3B,WAAW,GAAGA,WAAW,CAAC4B,GAAG,GAAG,iBAAiB,EACjD5B,WAAW,GAAGA,WAAW,CAAC6B,GAAG,GAAG,kBAClC,CAAC;UACDC,KAAK,EAAE;QACT,CAAC;QAED,MAAMC,MAAM,GAAG,IAAIV,MAAM,CAACC,KAAK,CAACC,IAAI,CAACS,GAAG,CACtC7B,eAAe,CAAC8B,OAAO,EACvBR,OACF,CAAC;QACDhB,MAAM,CAACsB,MAAM,CAAC;QAEdV,MAAM,CAACC,KAAK,CAACC,IAAI,CAACW,KAAK,CAACC,WAAW,CAACJ,MAAM,EAAE,gBAAgB,EAAE,MAAM;UAClEK,sBAAsB,CAACL,MAAM,CAAC;QAChC,CAAC,CAAC;QAEFK,sBAAsB,CAACL,MAAM,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAAC/B,WAAW,CAAC,CAAC;EAEjBP,SAAS,CAAC,MAAM;IACd,IAAIe,GAAG,EAAE;MACP4B,sBAAsB,CAAC5B,GAAG,CAAC;IAC7B;EACF,CAAC,EAAE,CAACP,kBAAkB,CAAC,CAAC;EAExB,MAAMmC,sBAAsB,GAAG,MAAOC,WAAW,IAAK;IACpD,MAAMC,MAAM,GAAGD,WAAW,CAACE,SAAS,CAAC,CAAC;IACtC,MAAMC,QAAQ,GAAGF,MAAM,CAACG,YAAY,CAAC,CAAC;IACtC,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,YAAY,CAAC,CAAC;IAEtC,MAAMC,WAAW,GAAG;MAClBC,MAAM,EAAEL,QAAQ,CAACM,MAAM,CAAC,CAAC;MACzBC,MAAM,EAAEL,QAAQ,CAACI,MAAM,CAAC,CAAC;MACzBE,MAAM,EAAER,QAAQ,CAACS,MAAM,CAAC,CAAC;MACzBC,MAAM,EAAER,QAAQ,CAACO,MAAM,CAAC,CAAC;MACzBE,eAAe,EAAElD,kBAAkB,CAAE;IACvC,CAAC;IAEDmD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,WAAW,CAAC;IAEzC,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAExC,OAAO,CAACC,GAAG,CAACwC,iBAAkB,eAAc,EAC/C;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,WAAW;MAClC,CACF,CAAC;MAED,IAAI,CAACU,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCb,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEW,IAAI,CAAC;;MAE1C;MACA5D,OAAO,CAAC8D,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAAC1D,MAAM,CAAC,IAAI,CAAC,CAAC;;MAEhD;MACA,MAAM2D,UAAU,GAAG,EAAE;MAErB,KAAK,MAAMC,UAAU,IAAIL,IAAI,EAAE;QAC7B,MAAMM,0BAA0B,GAAG,MAAMC,OAAO,CAACC,GAAG,CAClD,CAACH,UAAU,CAACI,aAAa,IAAI,EAAE,EAAEjE,GAAG,CAAC,MAAOkE,GAAG,IAAK;UAClD,MAAMC,eAAe,GAAG,MAAMpB,KAAK,CAChC,GAAExC,OAAO,CAACC,GAAG,CAACwC,iBAAkB,gBAAekB,GAAG,CAACE,EAAG,EACzD,CAAC;UACD,IAAID,eAAe,CAACb,EAAE,EAAE;YACtB,MAAMe,WAAW,GAAG,MAAMF,eAAe,CAACV,IAAI,CAAC,CAAC;YAChD,OAAO;cAAE,GAAGS,GAAG;cAAEI,SAAS,EAAED;YAAY,CAAC;UAC3C;UACA,OAAOH,GAAG;QACZ,CAAC,CACH,CAAC;QAED,MAAMK,kBAAkB,GAAGT,0BAA0B,CAACU,IAAI,CAAEN,GAAG,IAC7DA,GAAG,CAACI,SAAS,CAACE,IAAI,CACfC,OAAO,IAAKA,OAAO,CAACC,SAAS,KAAKjF,kBACrC,CACF,CAAC;;QAED;QACA,IAAI,CAACA,kBAAkB,IAAI8E,kBAAkB,EAAE;UAC7C,MAAMZ,MAAM,GAAG,IAAI9C,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC4D,MAAM,CAAC;YAC1C3E,GAAG,EAAE6B,WAAW;YAChB+C,QAAQ,EAAE,IAAI/D,MAAM,CAACC,KAAK,CAACC,IAAI,CAACI,MAAM,CACpC0C,UAAU,CAACgB,QAAQ,EACnBhB,UAAU,CAACiB,SACb,CAAC;YACDC,KAAK,EAAElB,UAAU,CAACmB;UACpB,CAAC,CAAC;UAEFnE,MAAM,CAACC,KAAK,CAACC,IAAI,CAACW,KAAK,CAACC,WAAW,CAACgC,MAAM,EAAE,OAAO,EAAE,MAAM;YACzD5D,iBAAiB,CAAC;cAChB,GAAG8D,UAAU;cACbI,aAAa,EAAEH;YACjB,CAAC,CAAC;UACJ,CAAC,CAAC;UAEFF,UAAU,CAACqB,IAAI,CAACtB,MAAM,CAAC;UACvBf,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEc,MAAM,CAAC;QACxC;MACF;MAEA9D,UAAU,CAAC+D,UAAU,CAAC;IACxB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdtC,OAAO,CAACsC,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE;EACF,CAAC;EAED,oBACE5F,OAAA;IAAA6F,QAAA,gBACE7F,OAAA;MAAK8F,GAAG,EAAEzF,eAAgB;MAAC0F,SAAS,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC1D3F,cAAc,iBACbR,OAAA,CAACF,OAAO;MAACuE,MAAM,EAAE7D,cAAe;MAAC4F,OAAO,EAAExF;IAAa;MAAAoF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/F,EAAA,CAlJQH,UAAU;AAAAoG,EAAA,GAAVpG,UAAU;AAoJnB,eAAeA,UAAU;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}