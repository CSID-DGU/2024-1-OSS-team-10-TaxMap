{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./MapContent.css\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates,\n  selectedDepartment\n}) {\n  _s();\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\n\n  // 마커 데이터 저장\n  const [markers, setMarkers] = useState([]);\n\n  // 선택된 마커의 정보를 사이드바에 출력 목적\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  // 사이드 바 닫기\n  const closeSidebar = () => {\n    setSelectedMarker(null);\n  };\n  useEffect(() => {\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script);\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        // 기본 값으로 '동국대 신공학관' 위도 경도에 좌표 표시\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates ? coordinates.lat : 37.55805491922956,\n          // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\n          coordinates ? coordinates.lng : 126.99832780535394),\n          level: 4\n        };\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\n        const fetchAndDisplayMarkers = async () => {\n          const bounds = map.getBounds();\n          const swLatLng = bounds.getSouthWest();\n          const neLatLng = bounds.getNorthEast();\n\n          // API로 경계 정보 전송하여 마커 데이터를 요청\n          const requestBody = {\n            minLat: swLatLng.getLat(),\n            maxLat: neLatLng.getLat(),\n            minLng: swLatLng.getLng(),\n            maxLng: neLatLng.getLng(),\n            govOfficeFilter: selectedDepartment // 부처 필터 추가\n          };\n          console.log(\"Request body:\", requestBody); // 요청 데이터 로그 출력\n\n          try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/map/view`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(requestBody)\n            });\n            if (!response.ok) {\n              throw new Error(\"Failed to fetch markers\");\n            }\n            const data = await response.json();\n            console.log(\"Fetched markers data:\", data); // 응답 데이터 로그 출력\n\n            // 필터링된 데이터를 이용하여 마커를 생성합니다.\n            const filteredMarkers = selectedDepartment ? data.filter(markerData => {\n              const hasMatchingSubsidy = markerData.organizations.some(org => org.subsidies && org.subsidies.some(subsidy => subsidy.govOffice === selectedDepartment));\n              return hasMatchingSubsidy;\n            }) : data;\n            console.log(\"Filtered markers data:\", filteredMarkers); // 필터링된 마커 데이터 로그 출력\n\n            setMarkers(filteredMarkers);\n\n            // 필터링된 마커 지도에 추가\n            filteredMarkers.forEach(markerData => {\n              console.log(\"Creating marker for:\", markerData); // 마커 생성 로그 출력\n\n              const marker = new window.kakao.maps.Marker({\n                map: map,\n                position: new window.kakao.maps.LatLng(markerData.latitude, markerData.longitude),\n                title: markerData.address\n              });\n\n              // 마커 클릭 이벤트 핸들러\n              window.kakao.maps.event.addListener(marker, \"click\", async () => {\n                try {\n                  const organizationsWithSubsidies = await Promise.all((markerData.organizations || []).map(async org => {\n                    const subsidyResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/subsidy/${org.id}`);\n                    if (subsidyResponse.ok) {\n                      const subsidyData = await subsidyResponse.json();\n                      return {\n                        ...org,\n                        subsidies: subsidyData\n                      };\n                    }\n                    return org;\n                  }));\n                  setSelectedMarker({\n                    ...markerData,\n                    organizations: organizationsWithSubsidies\n                  });\n                } catch (error) {\n                  console.error(\"Error fetching subsidy details:\", error);\n                }\n              });\n            });\n          } catch (error) {\n            console.error(\"Error fetching organizations within bounds:\", error);\n          }\n        };\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", fetchAndDisplayMarkers);\n        fetchAndDisplayMarkers();\n      });\n    };\n  }, [coordinates, selectedDepartment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), selectedMarker && /*#__PURE__*/_jsxDEV(Sidebar, {\n      marker: selectedMarker,\n      onClose: closeSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContent, \"Apc7Q8yJbBmUkO4TBLli2LFPIeg=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Sidebar","jsxDEV","_jsxDEV","MapContent","coordinates","selectedDepartment","_s","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","closeSidebar","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","map","Map","current","fetchAndDisplayMarkers","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","requestBody","minLat","getLat","maxLat","minLng","getLng","maxLng","govOfficeFilter","console","log","response","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","Error","data","json","filteredMarkers","filter","markerData","hasMatchingSubsidy","organizations","some","org","subsidies","subsidy","govOffice","forEach","marker","Marker","position","latitude","longitude","title","address","event","addListener","organizationsWithSubsidies","Promise","all","subsidyResponse","id","subsidyData","error","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nfunction MapContent({ coordinates, selectedDepartment }) {\r\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\r\n\r\n  // 마커 데이터 저장\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  // 선택된 마커의 정보를 사이드바에 출력 목적\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n\r\n  // 사이드 바 닫기\r\n  const closeSidebar = () => {\r\n    setSelectedMarker(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(() => {\r\n        // 기본 값으로 '동국대 신공학관' 위도 경도에 좌표 표시\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates ? coordinates.lat : 37.55805491922956, // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\r\n            coordinates ? coordinates.lng : 126.99832780535394\r\n          ),\r\n          level: 4,\r\n        };\r\n\r\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\r\n\r\n        const fetchAndDisplayMarkers = async () => {\r\n          const bounds = map.getBounds();\r\n          const swLatLng = bounds.getSouthWest();\r\n          const neLatLng = bounds.getNorthEast();\r\n\r\n          // API로 경계 정보 전송하여 마커 데이터를 요청\r\n          const requestBody = {\r\n            minLat: swLatLng.getLat(),\r\n            maxLat: neLatLng.getLat(),\r\n            minLng: swLatLng.getLng(),\r\n            maxLng: neLatLng.getLng(),\r\n            govOfficeFilter: selectedDepartment, // 부처 필터 추가\r\n          };\r\n\r\n          console.log(\"Request body:\", requestBody); // 요청 데이터 로그 출력\r\n\r\n          try {\r\n            const response = await fetch(\r\n              `${process.env.REACT_APP_API_URL}/api/map/view`,\r\n              {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n              }\r\n            );\r\n\r\n            if (!response.ok) {\r\n              throw new Error(\"Failed to fetch markers\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Fetched markers data:\", data); // 응답 데이터 로그 출력\r\n\r\n            // 필터링된 데이터를 이용하여 마커를 생성합니다.\r\n            const filteredMarkers = selectedDepartment\r\n              ? data.filter((markerData) => {\r\n                  const hasMatchingSubsidy = markerData.organizations.some(\r\n                    (org) =>\r\n                      org.subsidies &&\r\n                      org.subsidies.some(\r\n                        (subsidy) => subsidy.govOffice === selectedDepartment\r\n                      )\r\n                  );\r\n                  return hasMatchingSubsidy;\r\n                })\r\n              : data;\r\n\r\n            console.log(\"Filtered markers data:\", filteredMarkers); // 필터링된 마커 데이터 로그 출력\r\n\r\n            setMarkers(filteredMarkers);\r\n\r\n            // 필터링된 마커 지도에 추가\r\n            filteredMarkers.forEach((markerData) => {\r\n              console.log(\"Creating marker for:\", markerData); // 마커 생성 로그 출력\r\n\r\n              const marker = new window.kakao.maps.Marker({\r\n                map: map,\r\n                position: new window.kakao.maps.LatLng(\r\n                  markerData.latitude,\r\n                  markerData.longitude\r\n                ),\r\n                title: markerData.address,\r\n              });\r\n\r\n              // 마커 클릭 이벤트 핸들러\r\n              window.kakao.maps.event.addListener(marker, \"click\", async () => {\r\n                try {\r\n                  const organizationsWithSubsidies = await Promise.all(\r\n                    (markerData.organizations || []).map(async (org) => {\r\n                      const subsidyResponse = await fetch(\r\n                        `${process.env.REACT_APP_API_URL}/api/subsidy/${org.id}`\r\n                      );\r\n                      if (subsidyResponse.ok) {\r\n                        const subsidyData = await subsidyResponse.json();\r\n                        return { ...org, subsidies: subsidyData };\r\n                      }\r\n                      return org;\r\n                    })\r\n                  );\r\n\r\n                  setSelectedMarker({\r\n                    ...markerData,\r\n                    organizations: organizationsWithSubsidies,\r\n                  });\r\n                } catch (error) {\r\n                  console.error(\"Error fetching subsidy details:\", error);\r\n                }\r\n              });\r\n            });\r\n          } catch (error) {\r\n            console.error(\"Error fetching organizations within bounds:\", error);\r\n          }\r\n        };\r\n\r\n        window.kakao.maps.event.addListener(\r\n          map,\r\n          \"bounds_changed\",\r\n          fetchAndDisplayMarkers\r\n        );\r\n        fetchAndDisplayMarkers();\r\n      });\r\n    };\r\n  }, [coordinates, selectedDepartment]);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      {selectedMarker && (\r\n        <Sidebar marker={selectedMarker} onClose={closeSidebar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}