{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./MapContent.css\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport clicked_largest_icon from \"../../assets/images/markers/marker_icon_largest_clicked.png\";\nimport clicked_middle_icon from \"../../assets/images/markers/marker_icon_middle_clicked.png\";\nimport clicked_low_icon from \"../../assets/images/markers/marker_icon_low_clicked.png\";\nimport largest_icon from \"../../assets/images/markers/marker_icon_largest.png\";\nimport middle_icon from \"../../assets/images/markers/marker_icon_middle.png\";\nimport low_icon from \"../../assets/images/markers/marker_icon_low.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates,\n  selectedDepartment\n}) {\n  _s();\n  // selectedDepartment 추가\n  const mapContainerRef = useRef(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [clickMarker, setClickMarker] = useState(null);\n  const closeSidebar = () => {\n    setSelectedMarker(null);\n    setClickMarker(null);\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script);\n    script.onload = () => {\n      window.kakao.maps.load(async () => {\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates.lat, coordinates.lng),\n          level: 4\n        };\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\n        const loadMarkers = async () => {\n          const bounds = map.getBounds();\n          const swLatLng = bounds.getSouthWest();\n          const neLatLng = bounds.getNorthEast();\n          const requestBody = {\n            minLat: swLatLng.getLat(),\n            maxLat: neLatLng.getLat(),\n            minLng: swLatLng.getLng(),\n            maxLng: neLatLng.getLng()\n          };\n\n          // selectedDepartment가 존재하는 경우, govOfficeFilter 추가\n          if (selectedDepartment) {\n            requestBody.govOfficeFilter = selectedDepartment;\n          }\n          try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/map/view`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(requestBody) // requestBody를 사용\n            });\n            if (response.ok) {\n              const data = await response.json();\n              const markerMap = {};\n              data.forEach(marker => {\n                if (!markerMap[marker.address]) {\n                  markerMap[marker.address] = marker;\n                }\n              });\n              const expenses = Object.values(markerMap);\n              setMarkers(expenses);\n\n              // 선택된 부처에 해당하는 마커만 표시하도록 수정\n              expenses.forEach(markerData => {\n                if (!selectedDepartment || markerData.govOffice === selectedDepartment) {\n                  let markerImage;\n                  if (markerData.maxTotalSubsidy >= 100000000) {\n                    markerImage = largest_icon;\n                  } else if (markerData.maxTotalSubsidy >= 50000000) {\n                    markerImage = middle_icon;\n                  } else {\n                    markerImage = low_icon;\n                  }\n                  const marker = new window.kakao.maps.Marker({\n                    map: map,\n                    position: new window.kakao.maps.LatLng(markerData.latitude, markerData.longitude),\n                    title: markerData.address,\n                    image: new window.kakao.maps.MarkerImage(markerImage, new window.kakao.maps.Size(24, 35))\n                  });\n                  window.kakao.maps.event.addListener(marker, \"click\", async () => {\n                    if (clickMarker) {\n                      const {\n                        marker: prevMarker,\n                        data: prevData\n                      } = clickMarker;\n                      let previousMarkerImage;\n                      if (prevData.maxTotalSubsidy >= 100000000) {\n                        previousMarkerImage = largest_icon;\n                      } else if (prevData.maxTotalSubsidy >= 50000000) {\n                        previousMarkerImage = middle_icon;\n                      } else {\n                        previousMarkerImage = low_icon;\n                      }\n                      prevMarker.setImage(new window.kakao.maps.MarkerImage(previousMarkerImage, new window.kakao.maps.Size(24, 35)));\n                    }\n                    let clickedMarkerImage;\n                    if (markerData.maxTotalSubsidy >= 100000000) {\n                      clickedMarkerImage = clicked_largest_icon;\n                    } else if (markerData.maxTotalSubsidy >= 50000000) {\n                      clickedMarkerImage = clicked_middle_icon;\n                    } else {\n                      clickedMarkerImage = clicked_low_icon;\n                    }\n                    marker.setImage(new window.kakao.maps.MarkerImage(clickedMarkerImage, new window.kakao.maps.Size(24, 35)));\n                    if (clickMarker && clickMarker.marker === marker) {\n                      marker.setImage(new window.kakao.maps.MarkerImage(markerImage, new window.kakao.maps.Size(24, 35)));\n                      setClickMarker(null);\n                      return;\n                    }\n                    setClickMarker({\n                      marker,\n                      data: markerData\n                    });\n                    console.log(\"Marker Data:\", markerData);\n                    try {\n                      const orgSubsidies = await Promise.all(markerData.organizations.map(async org => {\n                        const subsidyPromises = org.subsidies.map(async sub => {\n                          try {\n                            const subsidyResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/subsidy/${sub.id}`);\n                            if (subsidyResponse.ok) {\n                              return await subsidyResponse.json();\n                            } else {\n                              console.error(`Failed to fetch subsidy details for subsidy ID: ${sub.id}`);\n                              return null;\n                            }\n                          } catch (subError) {\n                            console.error(`Error fetching subsidy details for subsidy ID: ${sub.id}`, subError);\n                            return null;\n                          }\n                        });\n                        return {\n                          ...org,\n                          subsidies: await Promise.all(subsidyPromises).then(results => results.filter(res => res !== null))\n                        };\n                      }));\n                      setSelectedMarker({\n                        ...markerData,\n                        organizations: orgSubsidies\n                      });\n                    } catch (orgError) {\n                      console.error(\"Error fetching organizations subsidies details:\", orgError);\n                    }\n                  });\n                }\n              });\n            } else {\n              throw new Error(\"Failed to fetch markers\");\n            }\n          } catch (error) {\n            console.error(\"Error fetching organizations within bounds:\", error);\n          }\n        };\n        loadMarkers();\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", loadMarkers);\n      });\n    };\n  }, [coordinates, selectedDepartment]); // selectedDepartment 추가\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), selectedMarker && /*#__PURE__*/_jsxDEV(Sidebar, {\n      marker: selectedMarker,\n      onClose: closeSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContent, \"hu8GrCRgliKNxEZmHI0KSSRkLXg=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Sidebar","clicked_largest_icon","clicked_middle_icon","clicked_low_icon","largest_icon","middle_icon","low_icon","jsxDEV","_jsxDEV","MapContent","coordinates","selectedDepartment","_s","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","clickMarker","setClickMarker","closeSidebar","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","map","Map","current","loadMarkers","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","requestBody","minLat","getLat","maxLat","minLng","getLng","maxLng","govOfficeFilter","response","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","data","json","markerMap","forEach","marker","address","expenses","Object","values","markerData","govOffice","markerImage","maxTotalSubsidy","Marker","position","latitude","longitude","title","image","MarkerImage","Size","event","addListener","prevMarker","prevData","previousMarkerImage","setImage","clickedMarkerImage","console","log","orgSubsidies","Promise","all","organizations","org","subsidyPromises","subsidies","sub","subsidyResponse","id","error","subError","then","results","filter","res","orgError","Error","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport clicked_largest_icon from \"../../assets/images/markers/marker_icon_largest_clicked.png\";\r\nimport clicked_middle_icon from \"../../assets/images/markers/marker_icon_middle_clicked.png\";\r\nimport clicked_low_icon from \"../../assets/images/markers/marker_icon_low_clicked.png\";\r\nimport largest_icon from \"../../assets/images/markers/marker_icon_largest.png\";\r\nimport middle_icon from \"../../assets/images/markers/marker_icon_middle.png\";\r\nimport low_icon from \"../../assets/images/markers/marker_icon_low.png\";\r\n\r\nfunction MapContent({ coordinates, selectedDepartment }) {\r\n  // selectedDepartment 추가\r\n  const mapContainerRef = useRef(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  const [clickMarker, setClickMarker] = useState(null);\r\n\r\n  const closeSidebar = () => {\r\n    setSelectedMarker(null);\r\n    setClickMarker(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(async () => {\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates.lat,\r\n            coordinates.lng\r\n          ),\r\n          level: 4,\r\n        };\r\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\r\n\r\n        const loadMarkers = async () => {\r\n          const bounds = map.getBounds();\r\n          const swLatLng = bounds.getSouthWest();\r\n          const neLatLng = bounds.getNorthEast();\r\n\r\n          const requestBody = {\r\n            minLat: swLatLng.getLat(),\r\n            maxLat: neLatLng.getLat(),\r\n            minLng: swLatLng.getLng(),\r\n            maxLng: neLatLng.getLng(),\r\n          };\r\n\r\n          // selectedDepartment가 존재하는 경우, govOfficeFilter 추가\r\n          if (selectedDepartment) {\r\n            requestBody.govOfficeFilter = selectedDepartment;\r\n          }\r\n\r\n          try {\r\n            const response = await fetch(\r\n              `${process.env.REACT_APP_API_URL}/api/map/view`,\r\n              {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(requestBody), // requestBody를 사용\r\n              }\r\n            );\r\n            if (response.ok) {\r\n              const data = await response.json();\r\n\r\n              const markerMap = {};\r\n              data.forEach((marker) => {\r\n                if (!markerMap[marker.address]) {\r\n                  markerMap[marker.address] = marker;\r\n                }\r\n              });\r\n\r\n              const expenses = Object.values(markerMap);\r\n              setMarkers(expenses);\r\n\r\n              // 선택된 부처에 해당하는 마커만 표시하도록 수정\r\n              expenses.forEach((markerData) => {\r\n                if (\r\n                  !selectedDepartment ||\r\n                  markerData.govOffice === selectedDepartment\r\n                ) {\r\n                  let markerImage;\r\n                  if (markerData.maxTotalSubsidy >= 100000000) {\r\n                    markerImage = largest_icon;\r\n                  } else if (markerData.maxTotalSubsidy >= 50000000) {\r\n                    markerImage = middle_icon;\r\n                  } else {\r\n                    markerImage = low_icon;\r\n                  }\r\n\r\n                  const marker = new window.kakao.maps.Marker({\r\n                    map: map,\r\n                    position: new window.kakao.maps.LatLng(\r\n                      markerData.latitude,\r\n                      markerData.longitude\r\n                    ),\r\n                    title: markerData.address,\r\n                    image: new window.kakao.maps.MarkerImage(\r\n                      markerImage,\r\n                      new window.kakao.maps.Size(24, 35)\r\n                    ),\r\n                  });\r\n\r\n                  window.kakao.maps.event.addListener(\r\n                    marker,\r\n                    \"click\",\r\n                    async () => {\r\n                      if (clickMarker) {\r\n                        const { marker: prevMarker, data: prevData } =\r\n                          clickMarker;\r\n                        let previousMarkerImage;\r\n                        if (prevData.maxTotalSubsidy >= 100000000) {\r\n                          previousMarkerImage = largest_icon;\r\n                        } else if (prevData.maxTotalSubsidy >= 50000000) {\r\n                          previousMarkerImage = middle_icon;\r\n                        } else {\r\n                          previousMarkerImage = low_icon;\r\n                        }\r\n                        prevMarker.setImage(\r\n                          new window.kakao.maps.MarkerImage(\r\n                            previousMarkerImage,\r\n                            new window.kakao.maps.Size(24, 35)\r\n                          )\r\n                        );\r\n                      }\r\n\r\n                      let clickedMarkerImage;\r\n                      if (markerData.maxTotalSubsidy >= 100000000) {\r\n                        clickedMarkerImage = clicked_largest_icon;\r\n                      } else if (markerData.maxTotalSubsidy >= 50000000) {\r\n                        clickedMarkerImage = clicked_middle_icon;\r\n                      } else {\r\n                        clickedMarkerImage = clicked_low_icon;\r\n                      }\r\n                      marker.setImage(\r\n                        new window.kakao.maps.MarkerImage(\r\n                          clickedMarkerImage,\r\n                          new window.kakao.maps.Size(24, 35)\r\n                        )\r\n                      );\r\n\r\n                      if (clickMarker && clickMarker.marker === marker) {\r\n                        marker.setImage(\r\n                          new window.kakao.maps.MarkerImage(\r\n                            markerImage,\r\n                            new window.kakao.maps.Size(24, 35)\r\n                          )\r\n                        );\r\n                        setClickMarker(null);\r\n                        return;\r\n                      }\r\n\r\n                      setClickMarker({ marker, data: markerData });\r\n\r\n                      console.log(\"Marker Data:\", markerData);\r\n\r\n                      try {\r\n                        const orgSubsidies = await Promise.all(\r\n                          markerData.organizations.map(async (org) => {\r\n                            const subsidyPromises = org.subsidies.map(\r\n                              async (sub) => {\r\n                                try {\r\n                                  const subsidyResponse = await fetch(\r\n                                    `${process.env.REACT_APP_API_URL}/api/subsidy/${sub.id}`\r\n                                  );\r\n                                  if (subsidyResponse.ok) {\r\n                                    return await subsidyResponse.json();\r\n                                  } else {\r\n                                    console.error(\r\n                                      `Failed to fetch subsidy details for subsidy ID: ${sub.id}`\r\n                                    );\r\n                                    return null;\r\n                                  }\r\n                                } catch (subError) {\r\n                                  console.error(\r\n                                    `Error fetching subsidy details for subsidy ID: ${sub.id}`,\r\n                                    subError\r\n                                  );\r\n                                  return null;\r\n                                }\r\n                              }\r\n                            );\r\n                            return {\r\n                              ...org,\r\n                              subsidies: await Promise.all(\r\n                                subsidyPromises\r\n                              ).then((results) =>\r\n                                results.filter((res) => res !== null)\r\n                              ),\r\n                            };\r\n                          })\r\n                        );\r\n\r\n                        setSelectedMarker({\r\n                          ...markerData,\r\n                          organizations: orgSubsidies,\r\n                        });\r\n                      } catch (orgError) {\r\n                        console.error(\r\n                          \"Error fetching organizations subsidies details:\",\r\n                          orgError\r\n                        );\r\n                      }\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            } else {\r\n              throw new Error(\"Failed to fetch markers\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error fetching organizations within bounds:\", error);\r\n          }\r\n        };\r\n\r\n        loadMarkers();\r\n\r\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", loadMarkers);\r\n      });\r\n    };\r\n  }, [coordinates, selectedDepartment]); // selectedDepartment 추가\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      {selectedMarker && (\r\n        <Sidebar marker={selectedMarker} onClose={closeSidebar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}