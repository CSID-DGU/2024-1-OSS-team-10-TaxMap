{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import\"./MapContent.css\";import Sidebar from\"../Sidebar/Sidebar\";import clicked_largest_icon from\"../../assets/images/markers/marker_icon_largest_clicked.png\";import clicked_middle_icon from\"../../assets/images/markers/marker_icon_middle_clicked.png\";import clicked_low_icon from\"../../assets/images/markers/marker_icon_low_clicked.png\";import largest_icon from\"../../assets/images/markers/marker_icon_largest.png\";import middle_icon from\"../../assets/images/markers/marker_icon_middle_clicked.png\";import low_icon from\"../../assets/images/markers/marker_icon_low.png\";import priceRangeImage from\"../../assets/images/marker-price-range.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MapContent(_ref){let{coordinates,selectedDepartment}=_ref;const mapContainerRef=useRef(null);const[markers,setMarkers]=useState([]);const[selectedMarker,setSelectedMarker]=useState(null);const[clickMarker,setClickMarker]=useState(null);const mapRef=useRef(null);const closeSidebar=()=>{setSelectedMarker(null);setClickMarker(null);};const loadMarkers=async map=>{const bounds=map.getBounds();const swLatLng=bounds.getSouthWest();const neLatLng=bounds.getNorthEast();const requestBody={minLat:swLatLng.getLat(),maxLat:neLatLng.getLat(),minLng:swLatLng.getLng(),maxLng:neLatLng.getLng()};if(selectedDepartment){requestBody.govOfficeFilter=selectedDepartment;}console.log(\"API Request Body:\",requestBody);// API 요청 본문 출력\ntry{const response=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/api/map/view\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(requestBody)});if(response.ok){const data=await response.json();console.log(\"API Response Data:\",data);// API 응답 데이터 전체 출력\nconst markerMap={};data.forEach(marker=>{if(!markerMap[marker.address]){markerMap[marker.address]=marker;}});const expenses=Object.values(markerMap);// 이전에 생성된 마커 삭제\nmarkers.forEach(marker=>{marker.setMap(null);// 기존 마커 제거\n});const newMarkers=[];// 선택된 부처에 해당하는 마커만 표시하도록 수정\nexpenses.forEach(markerData=>{var _markerData$organizat,_markerData$organizat2;console.log(\"Marker Data:\",markerData);// 마커 데이터 전체 로그 출력\n// 각 markerData의 organizations 배열을 통해 govOffice 필드를 확인\nconst govOffice=(_markerData$organizat=markerData.organizations[0])===null||_markerData$organizat===void 0?void 0:(_markerData$organizat2=_markerData$organizat.subsidies[0])===null||_markerData$organizat2===void 0?void 0:_markerData$organizat2.govOffice;console.log(\"Marker Data govOffice:\",govOffice);if(!selectedDepartment||govOffice===selectedDepartment){let markerImage;if(markerData.maxTotalSubsidy>=100000000){markerImage=largest_icon;}else if(markerData.maxTotalSubsidy>=50000000){markerImage=middle_icon;}else{markerImage=low_icon;}const marker=new window.kakao.maps.Marker({position:new window.kakao.maps.LatLng(markerData.latitude,markerData.longitude),title:markerData.address,image:new window.kakao.maps.MarkerImage(markerImage,new window.kakao.maps.Size(24,35))});marker.setMap(map);// 마커를 지도에 추가\nconsole.log(\"Marker added to map:\",marker);// 마커가 지도에 추가되었는지 확인\nwindow.kakao.maps.event.addListener(marker,\"click\",async()=>{if(clickMarker){const{marker:prevMarker,data:prevData}=clickMarker;let previousMarkerImage;if(prevData.maxTotalSubsidy>=100000000){// 1억 이상 - 금색  마커\npreviousMarkerImage=largest_icon;}else if(prevData.maxTotalSubsidy>=50000000){// 5천 만원 이상 - 초록색 마커\npreviousMarkerImage=middle_icon;}else{previousMarkerImage=low_icon;// 5천 만원 미만 - 파란색 마커\n}prevMarker.setImage(new window.kakao.maps.MarkerImage(previousMarkerImage,new window.kakao.maps.Size(24,35)));}let clickedMarkerImage;if(markerData.maxTotalSubsidy>=100000000){clickedMarkerImage=clicked_largest_icon;}else if(markerData.maxTotalSubsidy>=50000000){clickedMarkerImage=clicked_middle_icon;}else{clickedMarkerImage=clicked_low_icon;}marker.setImage(new window.kakao.maps.MarkerImage(clickedMarkerImage,new window.kakao.maps.Size(24,35)));if(clickMarker&&clickMarker.marker===marker){marker.setImage(new window.kakao.maps.MarkerImage(markerImage,new window.kakao.maps.Size(24,35)));setClickMarker(null);return;}setClickMarker({marker,data:markerData});console.log(\"Marker Data:\",markerData);try{const orgSubsidies=await Promise.all(markerData.organizations.map(async org=>{const subsidyPromises=org.subsidies.map(async sub=>{try{const subsidyResponse=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/api/subsidy/\").concat(sub.id));if(subsidyResponse.ok){return await subsidyResponse.json();}else{console.error(\"Failed to fetch subsidy details for subsidy ID: \".concat(sub.id));return null;}}catch(subError){console.error(\"Error fetching subsidy details for subsidy ID: \".concat(sub.id),subError);return null;}});return{...org,subsidies:await Promise.all(subsidyPromises).then(results=>results.filter(res=>res!==null))};}));setSelectedMarker({...markerData,organizations:orgSubsidies});}catch(orgError){console.error(\"Error fetching organizations subsidies details:\",orgError);}});newMarkers.push(marker);}});setMarkers(newMarkers);}else{throw new Error(\"Failed to fetch markers\");}}catch(error){console.error(\"Error fetching organizations within bounds:\",error);}};useEffect(()=>{const script=document.createElement(\"script\");script.src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=\".concat(process.env.REACT_APP_KAKAO_MAP_API_KEY,\"&autoload=false\");// 카카오맵 api이용한 지도 디스플레이\ndocument.head.appendChild(script);script.onload=()=>{window.kakao.maps.load(async()=>{const options={center:new window.kakao.maps.LatLng(coordinates.lat,coordinates.lng),level:4};const map=new window.kakao.maps.Map(mapContainerRef.current,options);mapRef.current=map;loadMarkers(map);window.kakao.maps.event.addListener(map,\"bounds_changed\",()=>// 지도 마우스로 이동시 지도의 영역 바뀜 감지\nloadMarkers(map));});};},[coordinates,selectedDepartment]);return/*#__PURE__*/_jsxs(\"div\",{className:\"map-content\",children:[\" \",/*#__PURE__*/_jsx(\"div\",{ref:mapContainerRef,className:\"map-container\"}),selectedMarker&&/*#__PURE__*/_jsx(Sidebar,{marker:selectedMarker,onClose:closeSidebar}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-range-legend\",children:[\" \",/*#__PURE__*/_jsx(\"img\",{src:priceRangeImage,alt:\"Marker Price Range\"}),\" \"]}),\" \"]});}export default MapContent;","map":{"version":3,"names":["React","useEffect","useRef","useState","Sidebar","clicked_largest_icon","clicked_middle_icon","clicked_low_icon","largest_icon","middle_icon","low_icon","priceRangeImage","jsx","_jsx","jsxs","_jsxs","MapContent","_ref","coordinates","selectedDepartment","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","clickMarker","setClickMarker","mapRef","closeSidebar","loadMarkers","map","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","requestBody","minLat","getLat","maxLat","minLng","getLng","maxLng","govOfficeFilter","console","log","response","fetch","concat","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","data","json","markerMap","forEach","marker","address","expenses","Object","values","setMap","newMarkers","markerData","_markerData$organizat","_markerData$organizat2","govOffice","organizations","subsidies","markerImage","maxTotalSubsidy","window","kakao","maps","Marker","position","LatLng","latitude","longitude","title","image","MarkerImage","Size","event","addListener","prevMarker","prevData","previousMarkerImage","setImage","clickedMarkerImage","orgSubsidies","Promise","all","org","subsidyPromises","sub","subsidyResponse","id","error","subError","then","results","filter","res","orgError","push","Error","script","document","createElement","src","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","load","options","center","lat","lng","level","Map","current","className","children","ref","onClose","alt"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport clicked_largest_icon from \"../../assets/images/markers/marker_icon_largest_clicked.png\";\r\nimport clicked_middle_icon from \"../../assets/images/markers/marker_icon_middle_clicked.png\";\r\nimport clicked_low_icon from \"../../assets/images/markers/marker_icon_low_clicked.png\";\r\nimport largest_icon from \"../../assets/images/markers/marker_icon_largest.png\";\r\nimport middle_icon from \"../../assets/images/markers/marker_icon_middle_clicked.png\";\r\nimport low_icon from \"../../assets/images/markers/marker_icon_low.png\";\r\nimport priceRangeImage from \"../../assets/images/marker-price-range.png\";\r\n\r\nfunction MapContent({ coordinates, selectedDepartment }) {\r\n  const mapContainerRef = useRef(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  const [clickMarker, setClickMarker] = useState(null);\r\n  const mapRef = useRef(null);\r\n\r\n  const closeSidebar = () => {\r\n    setSelectedMarker(null);\r\n    setClickMarker(null);\r\n  };\r\n\r\n  const loadMarkers = async (map) => {\r\n    const bounds = map.getBounds();\r\n    const swLatLng = bounds.getSouthWest();\r\n    const neLatLng = bounds.getNorthEast();\r\n\r\n    const requestBody = {\r\n      minLat: swLatLng.getLat(),\r\n      maxLat: neLatLng.getLat(),\r\n      minLng: swLatLng.getLng(),\r\n      maxLng: neLatLng.getLng(),\r\n    };\r\n\r\n    if (selectedDepartment) {\r\n      requestBody.govOfficeFilter = selectedDepartment;\r\n    }\r\n\r\n    console.log(\"API Request Body:\", requestBody); // API 요청 본문 출력\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/api/map/view`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(requestBody),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n\r\n        console.log(\"API Response Data:\", data); // API 응답 데이터 전체 출력\r\n\r\n        const markerMap = {};\r\n        data.forEach((marker) => {\r\n          if (!markerMap[marker.address]) {\r\n            markerMap[marker.address] = marker;\r\n          }\r\n        });\r\n\r\n        const expenses = Object.values(markerMap);\r\n\r\n        // 이전에 생성된 마커 삭제\r\n        markers.forEach((marker) => {\r\n          marker.setMap(null); // 기존 마커 제거\r\n        });\r\n\r\n        const newMarkers = [];\r\n\r\n        // 선택된 부처에 해당하는 마커만 표시하도록 수정\r\n        expenses.forEach((markerData) => {\r\n          console.log(\"Marker Data:\", markerData); // 마커 데이터 전체 로그 출력\r\n          // 각 markerData의 organizations 배열을 통해 govOffice 필드를 확인\r\n          const govOffice =\r\n            markerData.organizations[0]?.subsidies[0]?.govOffice;\r\n          console.log(\"Marker Data govOffice:\", govOffice);\r\n\r\n          if (!selectedDepartment || govOffice === selectedDepartment) {\r\n            let markerImage;\r\n            if (markerData.maxTotalSubsidy >= 100000000) {\r\n              markerImage = largest_icon;\r\n            } else if (markerData.maxTotalSubsidy >= 50000000) {\r\n              markerImage = middle_icon;\r\n            } else {\r\n              markerImage = low_icon;\r\n            }\r\n\r\n            const marker = new window.kakao.maps.Marker({\r\n              position: new window.kakao.maps.LatLng(\r\n                markerData.latitude,\r\n                markerData.longitude\r\n              ),\r\n              title: markerData.address,\r\n              image: new window.kakao.maps.MarkerImage(\r\n                markerImage,\r\n                new window.kakao.maps.Size(24, 35)\r\n              ),\r\n            });\r\n\r\n            marker.setMap(map); // 마커를 지도에 추가\r\n\r\n            console.log(\"Marker added to map:\", marker); // 마커가 지도에 추가되었는지 확인\r\n\r\n            window.kakao.maps.event.addListener(marker, \"click\", async () => {\r\n              if (clickMarker) {\r\n                const { marker: prevMarker, data: prevData } = clickMarker;\r\n                let previousMarkerImage;\r\n                if (prevData.maxTotalSubsidy >= 100000000) {\r\n                  // 1억 이상 - 금색  마커\r\n                  previousMarkerImage = largest_icon;\r\n                } else if (prevData.maxTotalSubsidy >= 50000000) {\r\n                  // 5천 만원 이상 - 초록색 마커\r\n                  previousMarkerImage = middle_icon;\r\n                } else {\r\n                  previousMarkerImage = low_icon; // 5천 만원 미만 - 파란색 마커\r\n                }\r\n                prevMarker.setImage(\r\n                  new window.kakao.maps.MarkerImage(\r\n                    previousMarkerImage,\r\n                    new window.kakao.maps.Size(24, 35)\r\n                  )\r\n                );\r\n              }\r\n\r\n              let clickedMarkerImage;\r\n              if (markerData.maxTotalSubsidy >= 100000000) {\r\n                clickedMarkerImage = clicked_largest_icon;\r\n              } else if (markerData.maxTotalSubsidy >= 50000000) {\r\n                clickedMarkerImage = clicked_middle_icon;\r\n              } else {\r\n                clickedMarkerImage = clicked_low_icon;\r\n              }\r\n              marker.setImage(\r\n                new window.kakao.maps.MarkerImage(\r\n                  clickedMarkerImage,\r\n                  new window.kakao.maps.Size(24, 35)\r\n                )\r\n              );\r\n\r\n              if (clickMarker && clickMarker.marker === marker) {\r\n                marker.setImage(\r\n                  new window.kakao.maps.MarkerImage(\r\n                    markerImage,\r\n                    new window.kakao.maps.Size(24, 35)\r\n                  )\r\n                );\r\n                setClickMarker(null);\r\n                return;\r\n              }\r\n\r\n              setClickMarker({ marker, data: markerData });\r\n\r\n              console.log(\"Marker Data:\", markerData);\r\n\r\n              try {\r\n                const orgSubsidies = await Promise.all(\r\n                  markerData.organizations.map(async (org) => {\r\n                    const subsidyPromises = org.subsidies.map(async (sub) => {\r\n                      try {\r\n                        const subsidyResponse = await fetch(\r\n                          `${process.env.REACT_APP_API_URL}/api/subsidy/${sub.id}`\r\n                        );\r\n                        if (subsidyResponse.ok) {\r\n                          return await subsidyResponse.json();\r\n                        } else {\r\n                          console.error(\r\n                            `Failed to fetch subsidy details for subsidy ID: ${sub.id}`\r\n                          );\r\n                          return null;\r\n                        }\r\n                      } catch (subError) {\r\n                        console.error(\r\n                          `Error fetching subsidy details for subsidy ID: ${sub.id}`,\r\n                          subError\r\n                        );\r\n                        return null;\r\n                      }\r\n                    });\r\n                    return {\r\n                      ...org,\r\n                      subsidies: await Promise.all(subsidyPromises).then(\r\n                        (results) => results.filter((res) => res !== null)\r\n                      ),\r\n                    };\r\n                  })\r\n                );\r\n\r\n                setSelectedMarker({\r\n                  ...markerData,\r\n                  organizations: orgSubsidies,\r\n                });\r\n              } catch (orgError) {\r\n                console.error(\r\n                  \"Error fetching organizations subsidies details:\",\r\n                  orgError\r\n                );\r\n              }\r\n            });\r\n\r\n            newMarkers.push(marker);\r\n          }\r\n        });\r\n\r\n        setMarkers(newMarkers);\r\n      } else {\r\n        throw new Error(\"Failed to fetch markers\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching organizations within bounds:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`; // 카카오맵 api이용한 지도 디스플레이\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(async () => {\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates.lat,\r\n            coordinates.lng\r\n          ),\r\n          level: 4,\r\n        };\r\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\r\n        mapRef.current = map;\r\n\r\n        loadMarkers(map);\r\n\r\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", () =>\r\n          // 지도 마우스로 이동시 지도의 영역 바뀜 감지\r\n          loadMarkers(map)\r\n        );\r\n      });\r\n    };\r\n  }, [coordinates, selectedDepartment]);\r\n\r\n  return (\r\n    <div className=\"map-content\">\r\n      {\" \"}\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      {selectedMarker && (\r\n        <Sidebar marker={selectedMarker} onClose={closeSidebar} />\r\n      )}\r\n      <div className=\"price-range-legend\">\r\n        {\" \"}\r\n        <img src={priceRangeImage} alt=\"Marker Price Range\" />{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}