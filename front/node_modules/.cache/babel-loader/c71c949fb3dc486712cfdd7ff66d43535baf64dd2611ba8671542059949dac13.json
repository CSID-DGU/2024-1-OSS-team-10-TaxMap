{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PJH\\\\Dongguk\\\\tax-map-frontend\\\\src\\\\components\\\\MapContent\\\\MapContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./MapContent.css\";\nimport { fetchBoundaryOrganizations } from \"../../services/suggestionService\"; // 백엔드 API 호출\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapContent({\n  coordinates\n}) {\n  _s();\n  // 사용자가 선택한 장소의 좌표를 props로 받아옴\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\n\n  // 마커 데이터 저장 (데모)\n  const [markers, setMarkers] = useState([]);\n\n  // 선택된 마커의 정보를 사이드바에 출력 목적\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  useEffect(() => {\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\n\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        // 입력값 없을 경우, 기본 값으로 '동국대 신공학관'  위도 경도에 좌표 표시\n\n        const options = {\n          center: new window.kakao.maps.LatLng(coordinates ? coordinates.lat : 37.55805491922956,\n          // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\n          coordinates ? coordinates.lng : 126.99832780535394),\n          level: 4\n        };\n        // ref 객체로 DOM 요소에 접근하여 지도 생성\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\n\n        // 지도 이벤트 리스너 : 사용자의 지도 이동이 끝날 때마다 경계 정보를 백엔드에게 전송\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", async () => {\n          const bounds = map.getBounds();\n          const swLatLng = bounds.getSouthWest();\n          const neLatLng = bounds.getNorthEast();\n\n          // URL 쿼리 문자열을 사용하여 경계 정보 전송 - POST\n\n          try {\n            const response = await fetch(\"http://124.49.226.94:9999/api/map/view\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                minLat: swLatLng.getLat(),\n                maxLat: neLatLng.getLat(),\n                minLng: swLatLng.getLng(),\n                maxLng: neLatLng.getLng()\n              })\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setMarkers(data); // 마커 데이터 저장\n              // 이전 마커 삭제 로직 추가 필요\n              // 지도에 마커 추가\n              data.forEach(markerData => {\n                new window.kakao.maps.Marker({\n                  map: map,\n                  position: new window.kakao.maps.LatLng(markerData.latitude, markerData.longitude),\n                  title: markerData.address // 추가정보 표시 :주소\n                });\n              });\n            } else {\n              throw new Error(\"Failed to fetch markers\");\n            }\n          } catch (error) {\n            console.error(\"Error fetching organizations within bounds:\", error);\n          }\n        });\n      });\n    };\n  }, [coordinates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marker-list\",\n      children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: marker.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), marker.organizations.map((org, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [org.name, \" - \", org.totalReceivedSubsidy]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContent, \"Apc7Q8yJbBmUkO4TBLli2LFPIeg=\");\n_c = MapContent;\nexport default MapContent;\nvar _c;\n$RefreshReg$(_c, \"MapContent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","fetchBoundaryOrganizations","Sidebar","jsxDEV","_jsxDEV","MapContent","coordinates","_s","mapContainerRef","markers","setMarkers","selectedMarker","setSelectedMarker","script","document","createElement","src","process","env","REACT_APP_KAKAO_MAP_API_KEY","head","appendChild","onload","window","kakao","maps","load","options","center","LatLng","lat","lng","level","map","Map","current","event","addListener","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","response","fetch","method","headers","body","JSON","stringify","minLat","getLat","maxLat","minLng","getLng","maxLng","ok","data","json","forEach","markerData","Marker","position","latitude","longitude","title","address","Error","error","console","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","marker","index","organizations","org","idx","name","totalReceivedSubsidy","_c","$RefreshReg$"],"sources":["D:/Users/PJH/Dongguk/tax-map-frontend/src/components/MapContent/MapContent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./MapContent.css\";\r\nimport { fetchBoundaryOrganizations } from \"../../services/suggestionService\"; // 백엔드 API 호출\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nfunction MapContent({ coordinates }) {\r\n  // 사용자가 선택한 장소의 좌표를 props로 받아옴\r\n  const mapContainerRef = useRef(null); // DOM에 접근하기 위한 ref 객체 생성\r\n\r\n  // 마커 데이터 저장 (데모)\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  // 선택된 마커의 정보를 사이드바에 출력 목적\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 스크립트 로드 후 kakao.map 객체 접근 및 지도 로드, autofalse로 자동 로드 방지\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_MAP_API_KEY}&autoload=false`;\r\n    document.head.appendChild(script); // index.html의 script에 추가되는 것인가?\r\n\r\n    script.onload = () => {\r\n      window.kakao.maps.load(() => {\r\n        // 입력값 없을 경우, 기본 값으로 '동국대 신공학관'  위도 경도에 좌표 표시\r\n\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(\r\n            coordinates ? coordinates.lat : 37.55805491922956, // 사용자 선택 좌표 : 디폴트 좌표(신공학관)\r\n            coordinates ? coordinates.lng : 126.99832780535394\r\n          ),\r\n          level: 4,\r\n        };\r\n        // ref 객체로 DOM 요소에 접근하여 지도 생성\r\n        const map = new window.kakao.maps.Map(mapContainerRef.current, options);\r\n\r\n        // 지도 이벤트 리스너 : 사용자의 지도 이동이 끝날 때마다 경계 정보를 백엔드에게 전송\r\n        window.kakao.maps.event.addListener(map, \"bounds_changed\", async () => {\r\n          const bounds = map.getBounds();\r\n          const swLatLng = bounds.getSouthWest();\r\n          const neLatLng = bounds.getNorthEast();\r\n\r\n          // URL 쿼리 문자열을 사용하여 경계 정보 전송 - POST\r\n\r\n          try {\r\n            const response = await fetch(\r\n              \"http://124.49.226.94:9999/api/map/view\",\r\n              {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                  minLat: swLatLng.getLat(),\r\n                  maxLat: neLatLng.getLat(),\r\n                  minLng: swLatLng.getLng(),\r\n                  maxLng: neLatLng.getLng(),\r\n                }),\r\n              }\r\n            );\r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              setMarkers(data); // 마커 데이터 저장\r\n              // 이전 마커 삭제 로직 추가 필요\r\n              // 지도에 마커 추가\r\n              data.forEach((markerData) => {\r\n                new window.kakao.maps.Marker({\r\n                  map: map,\r\n                  position: new window.kakao.maps.LatLng(\r\n                    markerData.latitude,\r\n                    markerData.longitude\r\n                  ),\r\n                  title: markerData.address, // 추가정보 표시 :주소\r\n                });\r\n              });\r\n            } else {\r\n              throw new Error(\"Failed to fetch markers\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error fetching organizations within bounds:\", error);\r\n          }\r\n        });\r\n      });\r\n    };\r\n  }, [coordinates]);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainerRef} className=\"map-container\"></div>\r\n      <div className=\"marker-list\">\r\n        {markers.map((marker, index) => (\r\n          <div key={index}>\r\n            <h4>{marker.address}</h4>\r\n            {marker.organizations.map((org, idx) => (\r\n              <p key={idx}>\r\n                {org.name} - {org.totalReceivedSubsidy}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MapContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}